<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>云在青天水在瓶</title>
  <meta name="baidu-site-verification" content="6b2f48c1baf35f9e0eb29b4455265203"/>
  <meta name="baidu-site-verification" content="hgXDOPtWLn" />
  <meta name="google-site-verification" content="YqjJD80rZQfugWoznvslaHlII_viwiMiUDEEgPTLEDw" />
  <meta name="renderer" content="webkit">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="mobile-web-app-capable" content="yes">
  <link rel="stylesheet" href="/css/font-awesome/css/font-awesome.min.css" type="text/css" />
  <script src="/files/dc3da690b0d2a5655a8d6150862a2a07.html"></script>
  <!-- <link rel="stylesheet" href="/css/pygments.css" type="text/css" /> -->
  <link rel="stylesheet" href="/css/default-min.css" type="text/css" />
  <link rel="stylesheet" href="/css/desktop-min.css" type="text/css" />
  <link rel="stylesheet" href="/css/mobile-min.css" type="text/css" />
  <link rel="shortcut icon" href="/css/favicon.ico" type="image/x-icon" />
  <link rel="icon" href="/css/favicon.ico" mce_href="/favicon.ico" type="image/x-icon">
  <link rel="alternate" type="application/atom+xml" title="Recent Entries" href="/atom.xml" />
  <script src="/js/jquery-1.11.0.min.js" type="text/javascript"></script>
  <script src="/js/jquery-migrate-1.2.1.min.js" type="text/javascript"></script>
  <script src="/js/jquery.transit.min.js" type="text/javascript"></script>
  <script src="/js/common.js" type="text/javascript"></script>
  <script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript"></script>

  
  <!-- growingIO code -->
  <script type='text/javascript'>
      var _vds = _vds || [];
      window._vds = _vds;
      (function(){
        _vds.push(['setAccountId', '9f3f34627219ccd1']);
        (function() {
          var vds = document.createElement('script');
          vds.type='text/javascript';
          vds.async = true;
          vds.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'dn-growing.qbox.me/vds.js';
          var s = document.getElementsByTagName('script')[0];
          s.parentNode.insertBefore(vds, s);
        })();
      })();
  </script>
  
  <!-- 删掉 baidu spider 主动推送，无效 -->
  <!-- baidu spider initiative push -->
<!-- <script>
    (function(){
        var bp = document.createElement('script');
        var curProtocol = window.location.protocol.split(':')[0];
        if (curProtocol === 'https') {
            bp.src = 'https://zz.bdstatic.com/linksubmit/push.js';        
        }
        else {
            bp.src = 'http://push.zhanzhang.baidu.com/push.js';
        }
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(bp, s);
    })();
  </script> -->
  
  <!-- google analytics push code -->
  <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-72176628-2', 'auto');
      ga('send', 'pageview');
  </script>

</head>

<!-- meiqia plug-in -->
<!-- 
<script type='text/javascript'>
    (function(m, ei, q, i, a, j, s) {
        m[a] = m[a] || function() {
            (m[a].a = m[a].a || []).push(arguments)
        };
        j = ei.createElement(q),
            s = ei.getElementsByTagName(q)[0];
        j.async = true;
        j.charset = 'UTF-8';
        j.src = i + '?v=' + new Date().getUTCDate();
        s.parentNode.insertBefore(j, s);
    })(window, document, 'script', '//static.meiqia.com/dist/meiqia.js', '_MEIQIA');
    _MEIQIA('entId', 15857);
</script>
 -->

<body>
  <?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

   <title>云在青天水在瓶</title>
   <link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml"/>
   <link href="http://localhost:4000" rel="alternate" type="text/html" />
   <updated>2018-04-18T23:26:45+08:00</updated>
   <id>http://localhost:4000</id>
   <author>
     <name></name>
     <email></email>
   </author>

   
   <entry>
     <title>如何在 Ipython Notebook 中画动态交互图</title>
     <link href="/dynamic-charts-matplotlib-alternative-ipython-notebook-python-drawing-js"/>
     <updated>2017-09-26T00:00:00+08:00</updated>
     <id>/dynamic-charts-matplotlib-alternative-ipython-notebook-python-drawing-js</id>
     <content type="html">&lt;h2 id=&quot;1-写在前面&quot;&gt;1. 写在前面&lt;/h2&gt;

&lt;p&gt;很久很久以前，我们在 python 里面画图都是用 matplotlib 这个包，当然现在好像也还在用它，不过我一直以来都不太喜欢这种方式，因为 matplotlib 画出来的图都是静态图片，虽然做简单的展示没什么压力，但是图形复杂后就不方面了，比如说下面这些场景：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一个数据有好几千个数据点，如果想观察其中某一个区间的数据点肿么办呢？&lt;/li&gt;
  &lt;li&gt;同时画了好几条数据，如果只想观察其中某条数据的情况呢？&lt;/li&gt;
  &lt;li&gt;想鼠标 hover 上去可以看到某条数据在某个数据点上的数据值？&lt;/li&gt;
  &lt;li&gt;。。。&lt;/li&gt;
  &lt;li&gt;。。。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;所以差不多两年前左右，为了既能在 ipython notebook 里做数据分析和研究，又能有个地方来做数据展示，我搞了个开源项目：&lt;a href=&quot;https://github.com/litaotao/IPython-Dashboard&quot;&gt;Ipython Notebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下面是一张在 github 上的项目介绍截图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/litaotao/IPython-Dashboard/master/docs/template-screenshot-4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下面是在 youtube 上的 demo 视频，不要问我为什么不放 youku 的链接，因为不想在优酷的广告时间插播，哈哈。&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;https://www.youtube.com/embed/Sy_Kmi6FFUg&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;当时这个项目做了几个月，小有成效，完全够用，但是在 2016.04 后就没有再更新过了，因为当时这个项目是为了做数据展示用的，要展示的数据是自己做量化策略的一些分析结果，然后当时因为这个项目差不多已经够用了，就没有再继续做下去，而是把更多的时间花在量化策略研究上面了。&lt;/p&gt;

&lt;p&gt;然后在2016.04 到最近的一年多里，我发现有很多人 star 和 fork 了我这个项目，差不多从 200不到的 star 增加到近 300 个star了，说实话虽然不是很多，但是我心里还是很感谢各位捧场的朋友的。只是我个人的行事风格向来都是 &lt;strong&gt;&lt;em&gt;只关注最核心的事&lt;/em&gt;&lt;/strong&gt;，所以以后也不会再花时间在这个项目上了，并且现在我已经有了更方便快捷好用的，直接能在 ipython notebook 里画动态交互图的方案，所以其实我自己也已经弃用了这个项目了。&lt;/p&gt;

&lt;p&gt;不过看到还有这么多人在关注这个项目，我想大家也许跟以前的我一样，很想要一种在 ipython notebook 里画动态交互图的工具和方法。所以我准备把现在自己是如何解决这个问题的方案写出来跟各位一起分享，算是感谢各位一直对这个项目的关注了。&lt;/p&gt;

&lt;h2 id=&quot;2-原理说明&quot;&gt;2. 原理说明&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;ipython notebook 说白了，就是一个 html 格式的文档，那既然 notebook 本身就是 html，那原理上当然也可以把一个 html 格式的图嵌入到 notebook 里。&lt;/li&gt;
  &lt;li&gt;ipython 本身提供了一个函数，&lt;code class=&quot;highlighter-rouge&quot;&gt;IPython.core.display.publish_display_data&lt;/code&gt; 这样一个内置函数，可以让用户指定输出到 notebook 中要展示的数据是什么样的。&lt;/li&gt;
  &lt;li&gt;所以，我们所要做的工作就很简单了：
    &lt;ul&gt;
      &lt;li&gt;需要生成一个 html 格式的图表数据&lt;/li&gt;
      &lt;li&gt;调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;IPython.core.display.publish_display_data&lt;/code&gt; 函数把图表数据插入到 notebook 里面。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面，我们就从要做的工作出发，分两步来完成这个工作。&lt;/p&gt;

&lt;h2 id=&quot;3-如果通过-python-代码来生成-html-格式的图表数据&quot;&gt;3. 如果通过 python 代码来生成 html 格式的图表数据&lt;/h2&gt;

&lt;p&gt;现在最常用的动态交互图的前端框架大概有下面几个：highcharts，d3.js，nvd3.js，echarts，c3js 这几个，首先明确一点，要想通过 python 来搞一个 html 格式的交互图，肯定需要间接的通过上面这些 js 库来实现。你别跟我说你要用 python 来从 0 到 1 生成一个 html 格式的图，要不然我真的会对你五体投地~。既然如此，那就先看看 google 大法，分别搜搜 &lt;code class=&quot;highlighter-rouge&quot;&gt;python highcharts&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;python d3.js&lt;/code&gt; 啥的，看看有没有前人已经把轮子造好了。&lt;/p&gt;

&lt;p&gt;果不其然，网上已经有不少轮子了，那接下来的工作就是众水三千，看你用哪个瓢了，哦，不对，是看你喝哪一瓢了~&lt;/p&gt;

&lt;p&gt;最后我选的是 highcharts 的一个实现，&lt;a href=&quot;https://github.com/arnoutaertgeerts/python-highcharts&quot;&gt;https://github.com/arnoutaertgeerts/python-highcharts&lt;/a&gt;，原因有几点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;highcharts 有个孪生兄弟 highstock，专门用于画股票行情 k 线的，非常不错，很适合我自己的应用场景&lt;/li&gt;
  &lt;li&gt;我们项目用来画图的库就是 highcharts，有大神在，出问题了可以秒问，省时省力&lt;/li&gt;
  &lt;li&gt;这个库的接口看起来很简单，人家写的例子也不错，入手快：&lt;a href=&quot;http://nbviewer.jupyter.org/github/arnoutaertgeerts/python-highcharts/blob/master/Tutorial.ipynb&quot;&gt;http://nbviewer.jupyter.org/github/arnoutaertgeerts/python-highcharts/blob/master/Tutorial.ipynb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ok，其实找到这个库之后，基本上就完成大半工作了，只需要把这个库针对数据分析，展示的场景再优化优化就可以了，所以接下来，我算是站在巨人的肩上，做了两件小事：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;优化了接口，专门适配 pandas dataframe 的数据格式&lt;/li&gt;
  &lt;li&gt;结合 ipython notebook 场景，包装了 &lt;code class=&quot;highlighter-rouge&quot;&gt;IPython.core.display.publish_display_data&lt;/code&gt; 函数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面分开来说：&lt;/p&gt;

&lt;h3 id=&quot;31-dataframe--charts&quot;&gt;3.1 dataframe + charts&lt;/h3&gt;

&lt;p&gt;都是简单的活儿，直接看核心代码咯，别跟我说看不懂代码，曾经一个同事要求跟我开发一个 module，结果尼玛他一个星期都看不懂千来行的代码，还让我给他画架构图，WTF~~~&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;核心画图代码，传入 dataframe，和相关的配置，返回图表对象，在 notebook 场景下可直接展示

    该函数包装了 charts 包的一个接口，使之更方便的适配 pandas dataframe 数据结构

    参数：
        df：dataframe 数据结构
        x(int / str)： x 坐标轴，必须是传入的 df 的某一个 column
        y(list)： y 坐标轴，必须在传入的 df 的column中出现
        title：图表名字

        kwargs：可选参数，默认都是 charts 支持的参数，如：
            x_type: x 坐标轴的数据类型，默认是 datetime 类型
            x_labels: 可自定义 x 坐标轴的 label 内容
            subtitle: 子标题内容，可以显示一些图标的统计指标
            width: 图表宽度
            height: 图表高度
            options: 图表 options，不常用，可以直接参考源码中的默认配置
    
    返回：
        charts 的图表对象，在 notebook 中可以直接运行展示
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;my_options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deepcopy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;my_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;x_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x_type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'x_type'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'datetime'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x_labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x_labels'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'x_labels'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subtitle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'subtitle'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'subtitle'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
     
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'datetime'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;my_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'xAxis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_type&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;my_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'xAxis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'categories'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tolist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;my_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'xAxis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'categories'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_labels&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'options'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;my_options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'options'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'options'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'width'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;my_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'width'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'width'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'height'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;my_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'height'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'height'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subtitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;my_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'subtitle'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subtitle&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;charts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'inline'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;ok, 到此，从 dataframe 到动态图表已经搞定了，接下来是如何结合到 ipython notebook 中，其实，上面几乎已经完成大半了，因为如果这个画图函数是在 notebook 中的单元格里最后运行的一个函数，且没有把返回结果显示的赋予一个变量的话，notebook 会默认展示函数输出的结果的。比如下面截图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/python_dynamic_charts1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;32-charts-to-ipython-notebook&quot;&gt;3.2 charts to ipython notebook&lt;/h3&gt;

&lt;p&gt;上面截图里，我们把图表对象放到一个变量 figure 里了，这个 figure 变量有个属性：&lt;code class=&quot;highlighter-rouge&quot;&gt;figure.data&lt;/code&gt;，里面存储的就是字符串格式的 html 格式的图表源码，so 那就简单多了，直接复用函数就搞定了： lambda figure: IPython.core.display.publish_display_data({‘text/html’: figure.data})&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;将 charts 图表的 html 数据手动展现，一般适用于循环作图的场景
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;IPython&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;publish_display_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text/html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;4-效果展示&quot;&gt;4. 效果展示&lt;/h2&gt;

&lt;p&gt;下面简单展示下效果，为了大家方便，我把测试数据也准备好了，所以这个 notebook
大家是可以直接下载下来运行的，我的环境是：python 2.7 + ipython 3.2.2&lt;/p&gt;

&lt;embed src=&quot;http://nbviewer.jupyter.org/url/litaotao.github.io/files/Dynamic%20Charts%20in%20Ipython%20Notebook.ipynb&quot; width=&quot;100%&quot; height=&quot;1000px&quot; /&gt;

&lt;p&gt;按照节奏，现在一般应该把源码和案例全放上来了，ok：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;mof_public.py: &lt;a href=&quot;http://litaotao.github.io/files/mof_public.py&quot;&gt;http://litaotao.github.io/files/mof_public.py&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;demo notebook: &lt;a href=&quot;http://litaotao.github.io/files/Dynamic%20Charts%20in%20Ipython%20Notebook.ipynb&quot;&gt;http://litaotao.github.io/files/Dynamic%20Charts%20in%20Ipython%20Notebook.ipynb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;回头再看看有木有必要提个 pr 到那哥们的 repo 里。&lt;/p&gt;

&lt;p&gt;最后贴上我几乎天天在用的一个案例，真正实现了一键出图，哈哈：&lt;a href=&quot;http://litaotao.github.io/files/report20170926&quot;&gt;http://litaotao.github.io/files/report20170926&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-后记&quot;&gt;5. 后记&lt;/h2&gt;

&lt;p&gt;首先还是感谢各位 star 了我的项目的朋友们，下面你们可以来 star 我的博客吧，源码和demo我都放到博客下的 files 下面了。哈哈。虽然不会经常更新【经常更新就一定是好事？】，但是保证在一些场景下，绝对比以前的好用好多好多倍呢，所以快来 star 吧。&lt;/p&gt;

&lt;p&gt;然后是想聊聊做这个项目的一些感触，现在回想，一开始做的时候超兴奋的，甚至有时候回家了还调试，特别是一边现学 html/css/js 那些东西，一边前后端结合起来调试，偶尔还有种 &lt;strong&gt;&lt;em&gt;欲与天公试比高&lt;/em&gt;&lt;/strong&gt; 的激动。不过当时做到后来，我居然开始添加一些很鸡肋的功能【比如说 sql】，当时想的是添加一个 online sql query &amp;amp; visualization，幸好 2016年初来了个股灾3.0，让亏了10几个点的我及时止步，我记得当时再决定是否要继续做这个 sql 工具的时候，我当时的内心独白大概是下面这样子的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;我最需要的是啥？
    &lt;blockquote&gt;
      &lt;p&gt;一个可以动态画图的工具。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;我最在乎的是啥？这个工具？还是这个工具服务的对象：投资策略？
    &lt;blockquote&gt;
      &lt;p&gt;当然是投资策略了，你妹的，我搞工具干嘛~&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;那我为啥会蛋疼的相加一些炫酷的功能？
    &lt;blockquote&gt;
      &lt;p&gt;因为蛋疼，想在 github 上多攒点 star，哈哈。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;多攒 star 重要还是研究投资策略闷声发财重要？
    &lt;blockquote&gt;
      &lt;p&gt;你妹的，这还用问吗？&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;那现在工具够用了，你还要接着瞎搞还是回来专心研究策略了呢？
    &lt;blockquote&gt;
      &lt;p&gt;好吧，我浪子回头，工具够用就行了，我要专心研究策略了。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;现在，我还是很庆幸当时没有继续搞这个项目，而是把这些时间放到研究上去了，这一年多了在研究方面积累了我个人看来相当有营养的东西。&lt;/p&gt;

&lt;p&gt;其实结合起一些经验来看，我发现大千世界真的事事向通。比如说，最近两三年关于创业很多的几本书：《创业维艰》，《精益创业》，《The One Thing》，我总结下来，其实可以简单的说：找到一个核心问题，并且找到一个能解决这个核心问题的解决方案，然后不断的把这个方案做到极致。是不是很熟悉，马上我就能在以前看过的鸡汤书里找到几句雷同的话，比如说我大新东方总教头余老师说的 “努力做到行业内的 top 20”；比如说现在的我大中华传承了几千年的经验 “360行，行行出状元”。如果这些都比较虚，那可以简单反思自己，在你买的很多东西中，不管网上网下，真实的还是虚拟的，你是因为它功能丰富买单呢？还是因为它真切的解决了你的某一项需求而付钱呢？类似的论断，我也在前段时间写的工作感悟中有提到，在这里，第八条：  &lt;a href=&quot;http://litaotao.github.io/thinkings-about-life-work-family-part-3&quot;&gt;工作 3 年后的一些思考【Part 3】&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;好像又扯了不少了，最后感谢下开发了这个 &lt;a href=&quot;https://github.com/arnoutaertgeerts/python-highcharts&quot;&gt;https://github.com/arnoutaertgeerts/python-highcharts&lt;/a&gt; repo 的哥们，的确省了我不少时间，然后也感谢各位观众们，哈哈，不要忘了给我 star 啊，哈哈哈哈～～～&lt;/p&gt;

</content>
   </entry>
   
   <entry>
     <title>IC 的计算之 pearson，spearman，kendall</title>
     <link href="/quant-correlation-pearson-spearman-kendall"/>
     <updated>2017-09-13T00:00:00+08:00</updated>
     <id>/quant-correlation-pearson-spearman-kendall</id>
     <content type="html">&lt;h2 id=&quot;写在前面&quot;&gt;写在前面&lt;/h2&gt;

&lt;p&gt;前几天在调试一个信号的时候，无意间发现算 ic 的时候一个缺失值对 ic 的影响很大，后来就查了查怎么这个 ic 的算法对结果影响会这么大呢。后来在 &lt;a href=&quot;http://www.cnblogs.com/kemaswill/archive/2012/11/01/2749842.html&quot;&gt;相关性分析 -pearson spearman kendall相关系数&lt;/a&gt; 这里看到了简明的对这三个相关性算法的分析，这里摘抄一下，就不重复做造轮子的活儿了。&lt;/p&gt;

&lt;h2 id=&quot;pearson-算法&quot;&gt;pearson 算法&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Pearson(x, y) 
= \frac {cov(x, y)} {\sigma_x^{} \sigma_y^{}}
= \frac {E[(x - \mu x) (y - \mu y)]} {\sigma x \sigma y}&lt;/script&gt;

&lt;h2 id=&quot;spearman-算法&quot;&gt;spearman 算法&lt;/h2&gt;

&lt;p&gt;spearman和kendall都是等级相关系数，&lt;strong&gt;&lt;em&gt;亦即其值与两个相关变量的具体值无关，而仅仅与其值之间的大小关系有关。&lt;/em&gt;&lt;/strong&gt;
spearman相关系数，亦即秩相关系数，根据随机变量的等级而不是其原始值衡量相关性的一种方法。
spearman相关系数的计算可以由计算pearson系数的方法,只需要把原随机变量中的原始数据替换成其在随机变量中的等级顺序即可:&lt;/p&gt;

&lt;p&gt;(1,10,100,101)替换成(1,2,3,4)&lt;/p&gt;

&lt;p&gt;(21,10,15,13)替换成(4,1,3,2)&lt;/p&gt;

&lt;p&gt;然后求替换后的两个随机变量的pearson相关系数即可.&lt;/p&gt;

&lt;h2 id=&quot;kendall-算法&quot;&gt;kendall 算法&lt;/h2&gt;
&lt;p&gt;kendall相关系数又称作和谐系数，也是一种等级相关系数，其计算方法如下：对于X,Y的两对观察值Xi,Yi和Xj,Yj,如果Xi&amp;lt;Yi并且Xj&amp;lt;Yj,或者Xi&amp;gt;Yi并且Xj&amp;gt;Yj，则称这两对观察值是和谐的，否则就是不和谐的。&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Kendall(x,y) = \frac {number \ of \ conordant \ paris - number \ of \ discordant \ pairs}{0.5 * n * (n-1)}&lt;/script&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;

&lt;p&gt;之前因为自己是用 pandas 里面的 corr 方法来计算 ic 的，然后 pandas 的 corr 默认采用 pearson 算法，所以一个异常值对结果的影响比较大，改成 spearman 方法后 ic 就稳定很多了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/pandas_corr_ic.jpg&quot; alt=&quot;pandas_corr_ic.jpg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考文章&quot;&gt;参考文章&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/kemaswill/archive/2012/11/01/2749842.html&quot;&gt;相关性分析 -pearson spearman kendall相关系数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
   <entry>
     <title>工作 3 年后的一些思考【Part 3】</title>
     <link href="/thinkings-about-life-work-family-part-3"/>
     <updated>2017-06-16T00:00:00+08:00</updated>
     <id>/thinkings-about-life-work-family-part-3</id>
     <content type="html">&lt;h2 id=&quot;7-爱你所做做你所爱&quot;&gt;7. 爱你所做，做你所爱&lt;/h2&gt;

&lt;p&gt;相信大家也经常听到，看到，遇到一些朋友，同事说自己对正在做的事情很不感兴趣，完全背离了学生时代的梦想。其实，我也一样，我从小就特别喜欢玩具模型，四驱车，遥控车，遥控飞机，轮船，甚至还想做个遥控的潜水艇,去长白山天池水下看看是不是真的有水怪存在。可是大四找工作的时候，如果我去做这些我喜欢的事，面临两个很大的问题：第一是当时【甚至现在也一样】以这些为主营业务的公司非常少，大都是一些玩具型厂商，而非专业的模型研发，生产，制造和销售公司【当时专业的大都是国外公司】，除了国内一家，深圳大疆创新，但是我又不想去深圳，只想在上海呆，所以这个问题很难解决；第二也算个好的方案，就是回家去开个模型店，经营得好也能活得不错，可是这样一来启动资金要很多钱【要知道真正的玩具模型，一个发动机都是3位数起的】，而且我也不想在人生最具备成长性的这个阶段就创业，很想在一些大公司学习和研究一段时间。&lt;/p&gt;

&lt;p&gt;所以，很自然的，我就决定先找一个能帮助自己有所成长的职业，并且是一个自己还算喜欢和接受的行业、工作岗位来学习。至于上面所谈到的梦想或爱好，可以先搁置下来，作为一个业余的兴趣，花一些业余的时间的去关注关注。只要能做到当未来某一天再继续玩这些模型的时候，不会手生即可。&lt;/p&gt;

&lt;p&gt;实话实说，其实当时我做这个决定也没那么难。因为自己可选的还挺多，最后决定加入现在的这家公司，做金融相关的研究和开发工作，业余也确实在关注航模，车模方面的产业动态，发现最大的变化是现在电池好像都升级了，价格也比之前便宜一些，不过社区却比之前人气低迷了不少。我一直关注的社区叫&lt;a href=&quot;http://bbs.mx3g.com/&quot;&gt;模型中国&lt;/a&gt;，不过在我接触这个论坛的时候，它其实叫模型三国【mx3g】呢，那会儿我是初二到初三之间，大概是 2006 ~ 2007 年这个时间段，想想到现在都过去 10年+ 了，我还像当初一样喜欢玩这些东西，而且现在也有钱玩了，想想也挺幸福的啊。还记得当时第一次买零件的时候，好像是因为没有身份证，淘宝上不能在线支付，我还是先给卖家把钱从 atm 上转过去，然后卖家再发货，当时真担心上当受骗，哈哈。不说了，一说到这个我就停不下来，有趣的事实在太多了，越扯越远了。&lt;/p&gt;

&lt;p&gt;说了这么多，其实我想跟大家分享一个自己的领悟，那就是当自己不能按自己的想法去做自己爱做的事情的时候，就努力爱上现在正在做的事情，把现在做的事情做好，相信一定会有一天，当你准备好了，没有顾虑了，一定可以接着去做自己想做的事的。而且这个过程其实会打开你的另一个世界，让你发现原来这个世界上除了你喜欢的事情，还有很多你尚未发现但是也很有趣的东西。&lt;/p&gt;

&lt;p&gt;比如说我在公司呆了 3年+，几乎是从一个金融小白到现在还算走上正道了【这句话怎么听起来怪怪的，哈哈】，我发现其实金融这个东西特别有意思，甚至在某些程度上来说，应该是现代人必须掌握的一个基本技能。最常见的就是理财了，现在银行存款低得这么可怜，怎么合理规划适合自己的理财方案确实是个大问题。最常见的比如说银行理财产品，短中期基金理财产品，新型的互联网理财产品【P2P】，除了考虑到收益率外，还得考虑各个理财产品的期限，风险结构，要不万一全放银行定期理财，突然有急用的时候就苦逼了。现在已经看到一些专业的理财咨询师这个职业出现了，看吧，哪里有需求，哪里就有职位。往大了说，即使以后要创业，金融知识也是作为领导者，决策者必备的素养之一，比如说如何规划公司业务发展，如果判断公司中短期业务瓶颈，如何合理避税，甚至后期的如何扩充资本，如何开展投融资活动等。这些都需要理解掌握的深厚的金融知识，远远不是挖一个 cfo 来就能解决的。&lt;/p&gt;

&lt;p&gt;现在回想，我还是很感谢自己当时的决定的。第一是这几年过得还算温饱，哈哈；其次是这几年学到的东西，增长的见识，我相信在未来无论我在哪里做什么，都会有莫大的帮助；最后当然是针对于金融这个职业，我还算是越来越入道了，也越来越喜欢了。&lt;/p&gt;

&lt;p&gt;ok，最后再总结一些这个感悟吧：在能力撑不起梦想的时候，就努力把当前做到最好吧，沉下心来提升自己，毕竟来日方长。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/settle_down.png&quot; alt=&quot;settle_down.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;8-be-focus&quot;&gt;8. Be focus&lt;/h2&gt;

&lt;p&gt;3 年前，我刚开始工作的时候，和很多毕业生一样心怀大志，觉得终于等到自己指点江山，激扬文字的时候了。可是现在再问我自己，完全没有了当时的年少轻狂，更多的是一份脚踏实地，专注于某一个方向认真发展自己的一种笃定。&lt;/p&gt;

&lt;p&gt;在去年下半年的时候，我负责了项目的一个模块，算是一个金融方向比较专业，且国内没有这方面竞品的一个新东西，从头到尾自己兼任模块负责人，产品经理，开发，测试。然后上线后因为只有自己对那块业务比较熟悉，销售同学每次见相关的客户也需要我一起参与进去，所以去年下半年有一段时间自己跑了很多客户。一开始其实我特别有新鲜感，因为之前也不经常面对面的接触客户，只做过简单、非系统性的产品介绍和培训，并没有这么实打实，真枪实弹的去面对过客户。所以在见过几次客户后，发现自己基本上都能 hold 住大部分客户，心里就有点自我感觉良好，觉得自己技能做开发，还懂金融，还能跑客户，而且还年轻，岂不是一枚潜力股，前途可期啊。就自我得意了一段时间，直到后来有一次去拜访客户，交流得也比较不错，临走前客户问了问我们团队的人员结构，我特地说自己是做开发的，也做投资研究，然后还可以陪销售同学来跑跑客户。那位大佬说了句话，我至今记忆犹新，他说像我这么年轻的小朋友，什么都能做当然是最好，毕竟可以增长自己的知识面和锻炼各方面的能力，可是长期来看，还是得考虑考虑自己的核心方向，专注于先把一件事做到最好，想想自己未来几年的核心竞争力在哪儿。&lt;/p&gt;

&lt;p&gt;当天回到公司，我就一直思考这个问题，客户说得没错，再过几年，其他同事都熟悉这个业务了，销售可以不用在跑了；投资研究有专业的同事在做，虽然说自己也可以偶尔一起做点东西，但专业性上目前来看毕竟有所欠缺；开发上自己负责的项目挑战都并不是特别大，技术上提高空间有限。如此这样发展下去，再过几年，不管是开发，投资研究，还是其他方面，自己很有可能不会在某一个方向上有很深的造诣，也就是说，自己开始缺乏核心的能力了。&lt;/p&gt;

&lt;p&gt;当然，这些所有的假想，都是在自己不带任何团队，不创业，依然这样 “傻白甜”似的工作状态的假设下进行的。不过当时还真的是细思极恐，想想如果真的再过几年自己成为了假想中的样子，到时该肿么办呢？&lt;/p&gt;

&lt;p&gt;当时反思了几天，想想自己以后想成为什么样的人，想想以后当别人提起我的时候，第一印象会是什么。后来我在自己的笔记本上做了个职业规划，重点就是写了自己最擅长做的事情，最喜欢做的事情，以及未来可以提升自己核心竞争力的事情，然后找这三个类别里重叠的地方，看看有多少是重叠的，并且再到重叠的事情里面列出一个优先级，根据自己的能力，精力来选前几件事情，作为一个职业发展规划来做这几件事情。&lt;/p&gt;

&lt;p&gt;现在回想，当时真的挺感谢那位大佬跟我说的那几句话的，在我自我感觉良好的时候跟我敲了个警钟。最近半年，我发现不仅仅是个人职业发展规划里在初期的时候需要做到 focus，而且在产品发展的过程中也需要做到 focus。比如说一些产品，常常发现越做功能越丰富，但是最核心的功能往往没有得到改善。我自己感触较深的是两个产品，一个是迅雷，一个是有道词典，初期都特别好用，一个用来下载电影，一个用来查单词。但是越到后面越难用，甚至频频卡顿，铺天盖地的广告，糟糕的体验，臃肿的安装包，现在有道词典是很少用了，迅雷的话找到了一个精简版，其他什么毛线都没有，就简简单单的下载，很干净很好用。现实中很多产品，往往一开始起步很不错，能解决用户的核心痛点，但是经常性的越到后面越发难用，核心的东西做不深，倒是周边工具做了一大堆。明明用户只想要一台 12 缸的发动机，偏偏要把拖拉机的马达搭配富丽堂皇的车壳，再加个各种牛皮混杂的坐垫，各种宝石镶嵌的方向盘，只能说是本末倒置了吧。&lt;/p&gt;

&lt;p&gt;所以，从我个人的一些简单经历和思考，我推荐不管在做职业规划还是在做产品的时候，需要认真考虑下 focus 的重要性。人们不会因为你什么都懂一点而看好你，更多的时候是会因为你是某一两个领域的佼佼者而为你竖起大拇指；人们不会因为一个产品功能丰富而买单，更多的时候是会因为这个产品里某个功能解决了他们的核心诉求。所以，在自己还没有核心竞争力之前，在产品还没有在某个领域做到足够顶尖之前，都请 be focus 吧，在这之后，当然可以发展其他更加丰富的技能和特点。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/just_focus.png&quot; alt=&quot;just_focus.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;9-be-thankful&quot;&gt;9. Be thankful&lt;/h2&gt;

&lt;p&gt;以前经常听这样一句话 “爱笑的女孩，运气都不会太差”，我想这句话改改，用在这个标题上，可以说 “怀揣感恩之心的人，运气也不会太差”。&lt;/p&gt;

&lt;p&gt;都说养儿方知父母辛，其实有这个感悟，说来还真是跟 “养儿”这个话题有很大的关系的。熟悉我的人都知道我有一个十岁大的小侄儿，很可爱的小男生，每次我节气回家都是我来带，睡觉也是跟我一起。&lt;/p&gt;

&lt;p&gt;有一次跟老姐聊天，姐跟我说了一件事，让我觉得这个宝贝小侄儿真是会“撩”。那天老姐们店里做促销活动，可能业务上没做好，被老大骂了。晚上姐回到家里心情很消极，眼睛都是红红的，儿子可能从来没看到妈妈这个样子，心里也不知道怎么安慰妈妈，就陪妈妈坐在沙发上，不疯玩打闹，给妈妈捶捶腿，然后说让妈妈不要难过，以后长大了一定会好好照顾妈妈的。老姐回忆说之前他重不知道儿子居然会说出这样的话来，而且当时还只是个6,7岁的小孩，整天有用不完的力气东打西闹，跟老妈吵架抵嘴是常有的事，才刚开始读书就闯了不少祸。我听说后也很惊讶，更多的是高兴，到今天那种感觉都还很深刻，小侄儿能说出这样的话，真的很懂事了。后来的一些事情也侧面证明了儿子这种关键时刻懂得关心长辈的性格。比如说去年姐姐，儿子陪老妈去省城看病，那几天看病期间儿子一点都没捣乱，甚至还帮姐姐和妈妈做了不少事，最后还在医院直接睡着了，下面是其中一天在医院椅子上睡着的照片。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/baby_son2.png&quot; alt=&quot;baby_son2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;后来，我慢慢发现小侄儿是那种平时看起来吊儿郎当的，但实际上内心情感还是很丰富懂事的。比如说，每次过年回家，我都把 ipad 带回去给他玩。有一次过年，在回上海前几天，我看见他老是躲着我们一个人在玩 ipad，当时很好奇他究竟在玩什么游戏，问了他也不说。后来有一次我们一起熬夜【我回家喜欢熬夜看电视，虽然有时候会困，但感觉还是很放松，现在我还有这个习惯，周五周六晚上都喜欢熬夜看电视看电影】，那天晚上我就假装很认真的跟儿子聊天，问他是在 ipad 上玩什么游戏，为什么都不想让大家知道。他这才松了口，原来是在 ipad 上给我写信，用一个叫 papers 的 app，在上面写给我看的字和画，哈哈，听到这个我还挺惊奇，这个娃还很会搞事情嘛。然后我就和他一起看他在 ipad 的上都写了哪些想跟我说的话，内容大家可以看看下面，哈哈：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/baby_son4.png&quot; alt=&quot;baby_son4.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不知道各位是否带过小孩，不过我想如果自己的孩子能写这样的话给你，相信看到的时候心里面都是暖暖的。今年端午因为一些事情我也回家呆了 3 天，忘记把 ipad 带回去了，小孩还说下次记得把 ipad 带回去，这样好给我写想跟我说的话。不过回上海后我还是发现了这个宝贝给我留的个惊喜，这次他在我的笔记本里夹了张纸巾，如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/baby_son3.png&quot; alt=&quot;baby_son3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这几年里，虽然陪小侄儿的时间不多，但是在培养他的过程中，我自己也感触到了很多东西。比如说脾性变得更温和了，不那么愤世嫉俗；也更加有耐心了，遇事不那么急急燥燥；也更有担当了，凡事都会站出来，学会更加努力的保护家人和孩子。特别是更加懂得感恩之心的可贵可爱，当然并不是需要小侄儿从小就有立志努力学习，以后努力赚钱赡养长辈的这种心态，而是看到他对周围的人都有感恩之心，在大人们处理正事的时候能主动为长辈分担的表现，我们心里都是充满了足足的幸福感和成就感。&lt;/p&gt;

&lt;p&gt;上面是我个人生活里的体会，职场上其实也有很多这样的例子。我觉得职场上要感谢的人其实挺多的，归纳下来可以分为 3 种：第一种是在关键时刻拉你一把的人；第二是培养，鞭策过你的人；第三就是你生活中，工作中周围的人和事。&lt;/p&gt;

&lt;p&gt;第一种人一般都是人们口中常说的贵人，确实也值得这样称呼。就拿我自己打比方，当时毕业时有几个方向可选，纯互联网的几个，嵌入式开发的和目前这家金融科技的，一开始这家给的 offer 待遇并不是最好的，和一开始面试的时候一位 boss 说的有差异。当时如果单单从 offer 待遇上来考虑的话，可能会去其他公司，但是下决定之前，我还是想电话咨询下当时的那位老大，万一是中途有什么误会呢，还是说清楚比较好。可是我也木有他的电话呀，只有一开始电面我的面试官的电话，于是我就给电面的面试官打了电话【也是我加入公司到现在的部门负责人】，把情况给面试官说明了一下，当时面试官很 nice，说会给我联系老大处理一下。没想到上午刚打的电话，下午那位老大就给我电话回来了，说 offer 待遇的问题完全可以解决，让我放心，接着几分钟后公司 hr 就电话我，已经把新的 offer 文书发给我了。现在回想，如果没有当时面试官和那位老大的帮助，我可能就会选其他公司了，今天的我肯定和现在完全不一样，不论好坏，但至少所做的事和个人经验阅历肯定会完全不同了。不过其实我很满意现在的自己，不管所做的事，认识的人还是积累的经验和技能。所以直到现在，我心里还是很感谢当年面试官和老大的热心支援，我之所以能成为今天的自己，很大的原因都是因为当时他们在关键的时候拉了我一把。&lt;/p&gt;

&lt;p&gt;第二种人也很少见。在培养人才上，每个企业都会很重视，但是更多的情况下，人们往往都会有所顾忌，会有人担心教好了徒弟饿死了师傅这样的情况出现。这种情况我们暂且不去批评好坏，但是不得不承认的确是有这种情况的存在的。所以一旦遇到一个可以，并且愿意培养你的人，那不可谓不幸运了。培养是一方面，鞭策是另一方面。相对于培养，愿意鞭策你的人通常来说会更少了。这样的人，就跟交心好友一样，一生难得遇到几个，但能遇到几个已经不错的了。他们不会每次都来提醒你，但他们的每一次提醒都会深刻的影响你的发展和规划。譬如之前给我的职业规划提出建议的那位大佬，没有他的一番话，也许我还会自我感觉良好，得意洋洋的什么都做，但最后却什么都做得不深入。&lt;/p&gt;

&lt;p&gt;第三种人就很常见了，你生活中，工作中周围的人和事。可能有些人会疑惑，不是说不怕神一样的对手，就怕猪一样的队友吗？难道我还要感谢那些猪一样的队友？是啊，我有时候也会想，干嘛要去感谢那些猪一样的队友。可是凡事都可以从两方面来考虑呀，就跟投资一样，现在全市场有 3千 多只上市交易的股票，如果选潜力股很难的话，也可以先把垃圾股踢出你的股票池呀，构建一个质量略高的股票池，再到这个股票池里选吧，或者实在担心选不了，那就全买呗，美其名曰增强指数，哈哈。言归正传，为什么要感谢生活中那些猪队友，很简单，因为他们给你设立了一个警戒线，做事做人，如果你倾向，触碰到了那条警戒线，你就开始成为你眼中的猪队友了。so，这些人其实对你来说也挺重要的，虽然不能给你一个向前进的加速力，但是至少可以告诉你那些道是直的，那些道的弯的，right？解释完了垃圾队友这个问题，我们再看看最开始的观点，为什么要感谢你生活中，工作中的人和事。很简单，因为他们成就了现在的自己，不论好坏，他们都给你营造了你成长的环境，不管你是否喜欢这个环境，毕竟选择怎样成长的权利都在你自己，所以不要把自己的好坏全部归结于环境。之所以要感谢，因为你压根不确定换了个环境你能比现在好。&lt;/p&gt;

&lt;p&gt;最后简单总结一下咯，常怀感恩之心，快乐他人，更快乐自己，人生苦短，多快乐快乐，哈哈。&lt;/p&gt;

&lt;h2 id=&quot;10-身体才是革命的本钱&quot;&gt;10. 身体才是革命的本钱&lt;/h2&gt;

&lt;p&gt;这个问题最近半年考虑得比较多，不知道是因为听说一些同行业的发生猝死，还是经常看到一些年龄不大的同事居然有了白发。总之最近这方面考虑得确实听说的，也开始锻炼起身体来了，以前没注意身体，经常性早饭不吃就来公司了，食堂中午也吃不饱，下午也还要撑到 5~6 点才去食堂吃饭。&lt;/p&gt;

&lt;p&gt;也不知具体是从哪个时候起，自己似乎突然间觉悟了。有句话不是经常听到嘛 “上半辈子用命换钱，下半辈子用钱换命”，我都不敢想象要是我这辈子活成这样的话，岂不白来世上跑一趟呀。而且现在老妈身体也不太好，自己可不能出啥毛病呀。一想到这些还真是头大，所以还是决定在努力工作的同时把身体搞好点，继续用 keep 来坚持锻炼，一般一个星期锻炼 4 天的样子，平均下来每天 20 ~ 30 分钟，强度还行。&lt;/p&gt;

&lt;p&gt;这一点好像写得没啥感染力，不过都是大实话，哈哈。&lt;/p&gt;

&lt;h2 id=&quot;11-写给3年后的自己&quot;&gt;11. 写给3年后的自己&lt;/h2&gt;

&lt;p&gt;本来是想写给未来的自己的，可是写给未来几年的自己呢？想想这篇 blog 不就是写自己的 3 年的总结的吗，何不就写给 3 年后的自己呢？所以就有了这个小标题。&lt;/p&gt;

&lt;p&gt;其实 3 年说长不长，说短不短，到时候应该是 2020 ~ 2021 年了，我虚岁 30，也算是人生的一个标志点吧。回顾过去 3 年，再看看现在的自己，我挺希望自己 3 年后是这样一个样子的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;生活上
    &lt;ul&gt;
      &lt;li&gt;爸爸妈妈身体没有大的毛病，一家人每年能外出长玩一次；&lt;/li&gt;
      &lt;li&gt;侄儿初一，能适应初中学习节奏，给侄儿报个课外兴趣班，最好是科技班，这样我们可以继续一起玩玩具，哈哈；&lt;/li&gt;
      &lt;li&gt;全家应该已经搬到贵阳的大 house 里了，希望大家都适应新的环境；&lt;/li&gt;
      &lt;li&gt;和未来的老婆应该准备迎接第一个小生命了吧；&lt;/li&gt;
      &lt;li&gt;把书房改造成玩具工作室，节气回家就和侄儿做玩具，航模略危险，就先多做做赛车模型和船模；&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;工作上
    &lt;ul&gt;
      &lt;li&gt;CFA 3 级全部考过，FRM 看情况，最好也能过完，把基础再夯实点；&lt;/li&gt;
      &lt;li&gt;研究出 3 ~ 5 个赚钱的策略，到时候一个策略一个账号，教爸妈操作，这样他们生活也能有趣点；&lt;/li&gt;
      &lt;li&gt;每年研读高质量的专业书籍 3 本左右，其他丰富知识面的书籍 20 本左右；&lt;/li&gt;
      &lt;li&gt;掌握全栈开发的技能，前端可以弱点；&lt;/li&gt;
      &lt;li&gt;掌握大数据行业动态和常见框架的使用，调优和应用架构设计；&lt;/li&gt;
      &lt;li&gt;掌握互联网金融行业的最新动态，这碗饭还是挺好吃的；&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../images/my_future_self.png&quot; alt=&quot;my_future_self.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;这些资料你也许用得着&quot;&gt;这些资料，你也许用得着&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://bbs.mx3g.com/&quot;&gt;模型中国论坛&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/thinkings-about-life-work-family-part-1&quot;&gt;工作 3 年后的一些思考【Part 1】&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/thinkings-about-life-work-family-part-2&quot;&gt;工作 3 年后的一些思考【Part 2】&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/thinkings-about-life-work-family-part-3&quot;&gt;工作 3 年后的一些思考【Part 3】&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
   <entry>
     <title>工作 3 年后的一些思考【Part 2】</title>
     <link href="/thinkings-about-life-work-family-part-2"/>
     <updated>2017-06-06T00:00:00+08:00</updated>
     <id>/thinkings-about-life-work-family-part-2</id>
     <content type="html">&lt;h2 id=&quot;3-be-kind-to-others&quot;&gt;3. Be kind to others&lt;/h2&gt;

&lt;p&gt;今年湖南卫视上了个新的节目，叫《神奇的孩子》，就是找一些非常有特色的孩子来展示才艺，这个节目远远不局限于去找那些各种竞赛拿奖，或者3岁识千字，5岁背百诗的小孩们。这里面的孩子们有喜欢下面条的，有喜欢当军人的，有喜欢玩滑板的，也有喜欢钢琴，跳舞的，很多很多，非常有意思。但是，其中有个澳洲来的孩子，我印象特别深刻，是一个叫坎贝尔的男孩，而且还是一个喜欢做布娃娃的阳光男孩。在采访中，他做的这些布娃娃，很多都是送给了一些素不相识的患者。其中有的患者病愈后，都很感谢坎贝尔，都说是这些布娃娃在他们最无助孤独的时候带来了阳光和快乐。&lt;/p&gt;

&lt;p&gt;节目中坎贝尔表现得一直很高兴，仿佛自己是被帮助的人一样。看那期节目的时候，我突然觉得，其实很多时候，帮助别人真的会比实现自己带来更多的成就感。我特地在网上找了那期的视频，&lt;a href=&quot;http://www.mgtv.com/b/308627/3892611.html&quot;&gt;湖南卫视：神奇的孩子，第十期，来自澳洲的坎贝尔，第 60 分钟开始&lt;/a&gt;，大家可以感受一下。&lt;/p&gt;

&lt;p&gt;我想起今年年初的时候，在放假回家之前，同女友去望湘园的南京东路店吃最喜欢的湘西霸王虾和湖南牛肉米线。当时人也不怎么多，但是我们那桌的服务员可能操作失误，没有把我们点的菜及时上桌，导致最后过了半个多小时才上菜，按照常规，超过30分钟就免单了，我问了下服务员，也确实可以免单，所以就准备免单了。不过过了一会儿，我觉得似乎有点不对劲，那个年轻的服务员经常跑过来问我们什么时候结账，只需要结茶水帐就可以了，而且说话的语气也有些急促，我们想难道这些免单的钱会扣到员工个人工资里面？于是那个小服务员再过来的时候，我问了他一下，这些免单的钱是怎么算的，他终于说出实情，每一个被免单的客户，免单的费用都会被算到相应的服务员身上，也就是说，今天我们这顿饭的菜钱，算是这个服务员自掏腰包了。怪不得，这么着急想要我们早点吃完，也许是想早点接待下一桌客人？或者心里面觉得委屈，不太高兴吧？我们回头想了想，做服务员也挺不容易的，而且也许也真不是这个服务员的错，也许是点餐系统出了问题啥的呢，所以就跟服务员说这个菜不免单了，我们照付就行了。现在回想起当时服务员听到这句话的表情，确实挺像雨天转晴一样，缓了会儿神才回我们，说跟店长请示一下，就急匆匆的跑前台去了。没过一会儿便跑回来，说店长说了，今天这顿饭全免单了，而且茶水费也不收了，所有费用也不会扣到他的头上，就当是店里招呼我们吃的。我勒个去，当时轮到我们震惊了，天下居然还有这样的好事，还是第一次听说啊。我们也缓了半天神，连跟他说了好几声谢谢，后来这个小哥也来我们桌几次，只是不是催我们了，而是让我们慢慢吃，有什么需要尽管叫他。&lt;/p&gt;

&lt;p&gt;amazing…，到现在每次想起这件事，我心里都会有一丝波澜，都说现在的社会都是逐利社会，都说 &lt;code class=&quot;highlighter-rouge&quot;&gt;天下熙熙，皆为利来；天下攘攘，皆为利往&lt;/code&gt;，没想到自己偶然的一个小举动居然能给自己带来这么大的感触。从那时候起，我越来越觉得，很多时候，be kind to others，也许能给自己带来很多意外的收获。下面这张图是那天吃完后在门口拍的：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/be_kind_to_others.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可能看到这里有同学会说，不是说写工作3年的感悟总结吗，怎么不写点工作上的事情？其实我觉得，工作是生活中投入时间最多的一部分了，生活中的一些感悟，肯定会有形无形的影响你在工作中的状态和处事方法，进而，会影响到你未来的工作。总之，善良的人，运气不会太差。&lt;/p&gt;

&lt;h2 id=&quot;4-很多时候比你厉害的人比你还要努力&quot;&gt;4. 很多时候，比你厉害的人，比你还要努力&lt;/h2&gt;

&lt;p&gt;今年年初参与了公司一个内部项目，每天 8:30 都要来公司参加项目的晨会，自此告别了每天 8点起床，8:45 出门的节奏了，改成每天 7：20 起床，7:45 点出门了。基本上相比以前，要提前一个小时到公司，可不来不知道，一来吓一跳。没来之前我还以为自己会是到得最早的，可没想到，每次我到公司，发觉居然大boss已经坐在位置上了，而且，几乎只要boss没出差，总会到得比我早。我第一次发现，原来boss竟然这样拼。这里的 boss，不是 project manager，也不是 technical lead，而是我们公司的 CEO。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/ohmygod.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;而且因为这个内部项目是直接由大boss来负责的，我们需要经常把任务进展跟boss做汇报，刚开始的时候，每次汇报都要提前做很多准备工作。报告内容很多，boss 看得很详细，我们经常还抽一些关键的指标【甚至把指标的计算公式】抽出来进行分析，按照 boss 的做法，并不要求我们一定要做出一个非常完美的研究结果出来，但是不论研究结果的好坏，一定要知道内在的理论。这点是我非常佩服的，反思我们很多人，当然包括以前的自己，在做一些研究的时候，都是先粗略的看下结果，结果还行的话，就有动力接着深入研究下去，结果不好的话，就想着换个思路或者重新研究新的领域去了。&lt;/p&gt;

&lt;p&gt;boss 因为经常出差，有时候也参加不了早上晨会，一般这个时候老板都是企业微信接入，很多时候老板都是在赶去活动／会议现场的路上跟我们开展会议，不得不说真的很拼。想想我们，平时有太多理由不去做一些事了：天气太冷，不能跑步，那也可以在家里瑜伽垫上做做简单的动作吧？没有英语环境，口语能力直线下降，那也可以用用像流利说这样的练习软件吧？遇到几个猪一样的队友，自己干嘛要费力不讨好，那也不能因为别人的不好就停止学习停止进步吧？&lt;/p&gt;

&lt;p&gt;随着工作经验和阅历的增长，我发现一个特别有意思的现象。越有能力的人，越有危机感，也越努力；而普通人则常常寄希望于明天，常常把自己假装成很忙的样子，微博，微信，头条，新闻每天就要占用大部分时间，本来一件可以一两小时解决的时候，非要用专业的理论来进行产品需求分析，写繁杂但没人会看的一堆需求文档，然后再拉几个人，约个会议，像是要改变世界一般的宣传自己的 &lt;code class=&quot;highlighter-rouge&quot;&gt;理念&lt;/code&gt;，cool? shit!&lt;/p&gt;

&lt;p&gt;曾经看过一般文章，里面有一个观点：对社会人士来说，最可怕的事情莫过于比你厉害的人比你还要努力。当时我并没有那么深的感触，但最近半年时间，这样的体验更深。一方面是在 boss 身上学到的东西，不管是行业知识还是做事风格，另一方面是常常反思身边的所见所闻。真的发现，这个社会其实也很公平，为什么经常说一个社会 80% 的财富都是积累在少数的 20% 人手中，其实很简单，因为那 20% 人的努力程度远远大于剩下的 80% 的人的总和。&lt;/p&gt;

&lt;h2 id=&quot;5-be-integrity&quot;&gt;5. Be integrity&lt;/h2&gt;

&lt;p&gt;有一个问题，大家可以在心里想想自己的答案 &lt;code class=&quot;highlighter-rouge&quot;&gt;从上学到大学毕业，你最感念的恩师都有哪些，why?&lt;/code&gt;。这个问题若我来回答的话，我会说是我的初中英文老师，一位来自农村的非常传统，正直，努力的老师，到现在我们都叫他 &lt;code class=&quot;highlighter-rouge&quot;&gt;老英&lt;/code&gt;。我是 07 年上的初一，虽然我成绩很好，已经进了县城里最好的一个中学，但爸妈为了让我能在个好点的环境学习，就麻烦叔叔把我分到了当时最好的一个班里。我记得当时平均每个班应该只招收 60 来个学生的，但是我们那个班硬是被招入了将近 90 号人，导致桌椅不够，不得不从其他班搬点过来。当时记得很清晰，老英第一节课的第一句话，就是说我们班的人背景都很好，原本 60来人的班硬是被搞到 90 个人，敢光明正大的说这句话在当时还是很有魄力，因为大家都知道，但是还没人敢这样说，而且班里有不少爸妈都是县政府里的人，甚至一些还是校长大大亲自安排进来的呢。后来渐渐听说了老英的一些光辉事迹，一个大城市里的高干曾经请他去给小孩补习一段时间，给老英钱老英就是不要，后来还专程把钱用信封寄过来，老英也没收，给人返还过去了。&lt;/p&gt;

&lt;p&gt;你别看老英的这么死板，教书育人起来一套一套的。先是自己办年级英语竞赛，自己买奖品，自己组织；然后是组织学生去参加省内英语竞赛，还周末免费帮大家培训，甚至还把学生叫去他家培训。这里面有两件事印象最深刻，一件是冬天里叫我们去教室做练习，我勒个去，那么冷的天，教室里又没暖气空调，而且又只有几个人，现在完全想不起来是怎么写单词的了，只记得最喜欢做选择题，因为可以用手捂在袖子里，然后握着笔在选项上随便做个标记就可以了。不过当时居然还一点都没埋怨老英，想想我也够懂事的了。第二件是后来就一个男生和一个女生去参加比赛了，赛前一段时间老英经常叫他们两去家里培训，我去，那可羡慕死我们其他人了，在那个荷尔蒙开始萌发的阶段，能有这么个正经理由每天跟女同学一起下课，一起学习，那是多好的事啊。&lt;/p&gt;

&lt;p&gt;那时候还流行过年去拜访老师，说白了就是给老师送礼，麻烦老师来年多多关照小孩。然后那会儿我和我妈就愁了，因为上了半个学期以后，老英的风格在所有学生家长里都传开了，没人敢找他 &lt;code class=&quot;highlighter-rouge&quot;&gt;照顾&lt;/code&gt; 学生，更别提送礼了。于是思来想去，我和老妈最后还是没有去拜访老英。说起来，我老妈和老英还算是老乡呢，都是来自离县城一百来公里的一个山村里。直到初中 3 年毕业时，我和老妈思前想后，不行，必须得去感谢一下老英，但是不能送庸俗的东西，更不能发小孩儿压岁钱。于是我们就想，送什么好呢，最后想到一个他无法拒绝的东西：录音机。没错，就是下面这种录音机，当时我们都听这个来学习课文的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/recorder.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因为是这样的，当时老英的录音机也不好用了，经常出问题，也没见他换新的。然后我们想如果我们送录音机的话，是给他教书用的，也不是给他自己用的，所以严格算下来应该还不算是 &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;行贿&quot;&lt;/code&gt; 吧，而且这个东西要是他不收的话，我们也用不了啊。所以当时就和老妈花 200 多买了个录音机，临近初中毕业才第一次踏进老英的家里呢。&lt;/p&gt;

&lt;p&gt;就这个录音机，前年和几个同学去看老英的时候他还提到了，说是他收到的最好的礼物之一，哈哈。&lt;/p&gt;

&lt;p&gt;现在想起来，如果要回答前面提出的问题，我会说最感谢的恩师是老英了。是他在我那个懵懵懂懂的年纪里用自己的行动教育我什么叫做正直和善良。经常听家里的老人说 &lt;code class=&quot;highlighter-rouge&quot;&gt;三岁看八十，七岁看终身&lt;/code&gt;，大意就是说一个小孩子在思想成熟前所接受的人，事，物以及这些人事物给他带去的影响会伴随他一身。每次回家，妈妈都会说担心我为人太正直，在外面工作会处理不好事情。我想，也许在初中那三年，老英给我带来的，也许远远不止知识上的充裕，也许时间越长，越能感受到那三年里老英展现的正直，善良，梦想，越能感受到那三年里我对正直，善良和梦想的理解和认同。&lt;/p&gt;

&lt;p&gt;现在来看，工作时间越长，越能发现技能，聪慧程度很多时候只能在起跑的时候给你一个大的助推力，但之后决定你能走多远，是否走对了方向，更多的会跟一个人是否正直善良，是否有良好的性格脾性有关。&lt;/p&gt;

&lt;h2 id=&quot;6-step-by-step-one-goes-far&quot;&gt;6. Step by step, one goes far&lt;/h2&gt;

&lt;p&gt;已经想不起来是在哪里听到的这句话了，不过我觉得的真的很有道理。很多职场新人，包括几年前刚开始工作的我，都希望能马上就能一展身手。我觉得一方面是现在的人们都偏向急躁，再加上一些偶像剧里动不动就是踏过几个小挫折就开始走向人生巅峰的情节；另外一个方面是我们这一代，以及我们后面的年轻人们，从小都不缺吃喝，也没有经历过什么大事，太顺利了，导致大家都会觉得工作嘛，只要去做就行了。所以很多人，还没毕业就开始规划起自己未来的几年成绩了。&lt;/p&gt;

&lt;p&gt;可现实呢，在你和公司签完合同的那一天起，在大多数情况下，不论你背景多牛，GPA 多高，是不是海龟，在公司面前，你们都是一张白纸。起点也许会稍有不同，但开始做的事都大同小异，虽不像传说中的端茶倒水那般简单【我接触的还真没有要去端茶倒水的，哈哈，有的话可以自行脑补哈】，但是最起码都是从最简单，最基础的事情开始干起的。WHY？这是一个很好的问题，一开始我也不知道，但是现在回想，我很认同这种做法。下面我从我自己个人的角度来说说。&lt;/p&gt;

&lt;p&gt;我当时来到公司做的第一个项目，是协助一位非常厉害的华尔街回来的基金经理，将他的一个 excel 模型实现成一个 general 的产品给客户使用。当我第一次拿到模型的时候，我头都大了，在大学里虽然也用过excel，但哪儿见过什么 vba，跨 sheet 引用数据，还有一堆看起来天花乱坠的公式，而且最让人望而却步的是，那个 excel 模型里居然有几十个 sheet，oh my god，我现在都还记得很清楚当时我的感受：我觉得我可能 hold 不住这个东西了，这不是让我一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;修单车&lt;/code&gt; 的去拆战斗机的马达吗？&lt;/p&gt;

&lt;p&gt;在默默的傻逼了不知多久，我静下心来，心想不能就这样认输了，要不第一多丢脸啊，别这第一个项目就出师不利呀；其次是咱可是两位 boss 特招进来的，要是第一个项目不战而败，这不是打两位老大的脸吗？干!!!&lt;/p&gt;

&lt;p&gt;于是，接下来的一个星期，我朝九晚六，在公司就只做了一件事：把这个 excel 模型，输出模型结果的那个 sheet 里，从第一个单元格开始看起，一步一步的，看它结果都是引用了哪些数据，做了什么样子的计算，然后输出成什么样子的图表。然后中途把重要的 excel 知识点自己找例子体验一下，把繁琐复杂的计算逻辑拆成几个小的步骤，用流程图画出来。一开始贼痛苦，因为看到啥都是懵逼的，过了几天后开始觉得有点摸熟了这个模型的一些基本原理，核心都是计算一些指标，然后去查这个指标在一些数据集的位置，算一个 percentage score，最后开始慢慢有点轻车熟路的感觉了。第二个星期，我也还没有直接就把模型工程化，而是再从头到尾研究了一遍模型，把整个模型的核心逻辑用流程图构造出来，看看都有哪些可以共享的计算逻辑，这样在之后的代码实现能省很多工作量。再后来就是开始写代码了，工程方面倒是没出什么大的意外，不过细节性的地方倒是挺多。&lt;/p&gt;

&lt;p&gt;虽然说这个项目现在没有再做了，但现在我依然对里面的核心逻辑理解很清晰，即便是现在模型有什么大的更改，要重新设计成其他产品来做，我想也很有希望在一周内就把核心逻辑和架构设计实现完成。这个项目的经历让我至今难忘，不仅是因为它是我的第一个项目，而是在解决这个项目的过程当中，真的是从 0 到 1 一步一步走出来的。这整个经历，从模型结果 sheet 页面的第一个单元格，到最后协同测试，运维团队完成产品上线，历时 2 个月，其间很多东西真的是连之前听都没听过的。还记得产品发布后，我居然还拿了个季度最佳新人奖，哈哈，当时充满了自信，那种自信不同于大学期间的年少轻狂，而是一种实实在在的感觉，相信自己完全从头到尾把一件事做好，不负众望，给团队，公司带来利益。&lt;/p&gt;

&lt;p&gt;凡事步步为营，稳扎稳打，等待量变到质变的一天，废话不多说，相信下面这幅图能表达更有感染力：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/ThePowerOf1ADay.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;7-to-be-continued&quot;&gt;7. To be continued…&lt;/h2&gt;

&lt;h2 id=&quot;这些资料你也许用得着&quot;&gt;这些资料，你也许用得着&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.mgtv.com/b/308627/3892611.html&quot;&gt;湖南卫视：神奇的孩子，第十期，来自澳洲的坎贝尔，第 60 分钟开始&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=RVmMeMcGc0Y&quot;&gt;Amy Cuddy TED Talk - Fake it Till You Make it&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/thinkings-about-life-work-family-part-1&quot;&gt;工作 3 年后的一些思考【Part 1】&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/thinkings-about-life-work-family-part-2&quot;&gt;工作 3 年后的一些思考【Part 2】&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/thinkings-about-life-work-family-part-3&quot;&gt;工作 3 年后的一些思考【Part 3】&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
   <entry>
     <title>工作 3 年后的一些思考【Part 1】</title>
     <link href="/thinkings-about-life-work-family-part-1"/>
     <updated>2017-05-31T00:00:00+08:00</updated>
     <id>/thinkings-about-life-work-family-part-1</id>
     <content type="html">&lt;h2 id=&quot;1-从-7-年前的一部纪录片说起&quot;&gt;1. 从 7 年前的一部纪录片说起&lt;/h2&gt;

&lt;p&gt;故事还得从 7 年前说起，2010年，也是我告别高中，踏入大学生涯的第一年，央视出了一个纪录片：《华尔街》，讲述了新世纪时期的金融发展历程和其中很多有趣的故事，及时现在回顾，我依然还会觉得这是一部非常不错的纪录片。&lt;/p&gt;

&lt;p&gt;我不太记得自己是什么时候看的这部纪录片了，当时【甚至直到现在】，我对其中 2 个片段记忆依然非常清晰。第一个是讲诉一位华尔街的交易员斯科特，每天都要乘最早一班的轮渡从新泽西到曼哈顿上去上班。当时对我一个连海都没见过的小子来说，这真是超酷，居然可以每天坐船去上班，而且看见主人公斯科特的样子，非常精明干练，内心对那些在华尔街上穿梭的人顿时有一种崇拜，羡慕，佩服的感情。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/wall_street_1-iloveimg-compressed.gif&quot; alt=&quot;wall&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第二个镜头是采访骑士资本的一个交易员，史蒂夫，主要讲述了骑士资本的自动化交易的故事，据说当时骑士资本有 90% 的交易量都是由计算机自主成交的。Unbelievable, Amazing, Cool — 这是当时我最大的感触，作为一个偏计算机专业的学生，我突然发现原来计算机并不仅仅可以简单的做一些图形化【GUI】的计算器，不仅仅可以搞一些工业设计【auto cad】，不仅仅可以写写资料【office】，不仅仅可以用来打打游戏聊聊qq，原来计算机居然还有这么大的用处，简直就是一个宝藏啊，怪不得比尔盖茨可以用计算机来赚这么多钱。【请原谅我当时的无知，当时我用电脑就是看电影，查资料，玩游戏，和学习编程；甚至在当时，我连 &lt;code class=&quot;highlighter-rouge&quot;&gt;服务器&lt;/code&gt; 这样的名词都木有听说过】&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/wall_street_2-iloveimg-compressed.gif&quot; alt=&quot;wall&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当时看完这部纪录片，我发现自己见识真是太少了，同时也对华尔街，金融充满了向往，或者更准确的说，是一种发自心底的好奇，尊敬和佩服吧。故事到这里，按照一般小说／电视的剧情应该是我从此发奋学习，学习了很多金融专业的知识，毕业后毫不费力的以优异的待遇进入一家外企金融公司，从此走上实现梦想的道路吧。可是这不是小说，也不是电视剧，而是我一个臭小子的真实经历。是的，就跟大多数大学生一样，看完纪录片后没多久，我就渐渐把这种心里的好奇感，敬佩感，向往感埋没在其他新鲜的事物，活动以及欣赏学校里各种各样的美女中去了。&lt;/p&gt;

&lt;p&gt;不过万幸的是，幸好大学期间我还保留了自己的一些兴趣，以及把计算机这个专业学得不错。我大学期间有两个兴趣，一个是写英文书法，第一个原因是看过美国独立宣言的原本照片，觉得那上面的字体真是美到家了，被这种书写之美完全折服了；第二个原因是想用这种字体来写情书的话，效果肯定也不错吧。于是说干就干，特地买了美国原装过来的笔杆，笔尖和英文教程，开始练习起来，你别说，还真学到了点好东西。到今天笔杆，笔尖和教材我都还保管得好好的。第二个是玩航模【动态航空模型】，后来还因这个爱好参加了学校的创新实践大赛，指导老师还带我去天津参加了个行业会议，也是大学里唯一一次去参加学术会议。到现在我还很感谢当时带我的指导老师，给我提供了很多很多资源，甚至还直接把他办公室的钥匙给我，我可以随时进出学习，实验甚至直接在里面上自习。&lt;/p&gt;

&lt;p&gt;后来的后来，就是平平凡凡，普普通通的日子，逃课去玩耍，去听自己喜欢的老师讲课，为了看见一个女生天天跑图书馆自习，时不时的出去大餐喝酒，然后就这样没有发生什么惊天地泣鬼神的事迹下度过了大学生涯。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;2014年3月初，过完学生时代最后一个寒假，我把毕业论文和毕业设计提前做完，在跟老师做了几次沟通后，于 3月下旬登上了去往上海的飞机，基本上算是告别了象牙塔时代吧【当时还尚未正式毕业，7月份回校办理毕业手续，才正式告别学校生涯】。&lt;/p&gt;

&lt;p&gt;还记得当时花了 ～3 天时间才租到了个不错的房子，花了几天时间置办了家具和休息了几天，在 4月1号，也就是愚人节那天正式开始了我的工作生涯。之所以记忆这么清晰，还有一个原因，那年的 4月1号 刚好是我阴历的生日，而且能进入 datayes，可以说是误打误撞，一路好运才能进去的吧。虽然说在当时看来，datayes 才成立半年左右，但招聘的人基本上都是研究生毕业的，当时我一个本科也能进去，心里面确实有很强的幸运感。&lt;/p&gt;

&lt;h2 id=&quot;2-工作-3-年我的一些感悟&quot;&gt;2. 工作 3 年，我的一些感悟&lt;/h2&gt;

&lt;p&gt;晃眼间就跌跌撞撞的到了现在，再过一个来月就到了自己正式入职3个年的时间了，虽然实际上偶已经工作3年多了【14年4月1号就以实习的身份进入了公司，当时还没有拿到毕业证书，不能签正式合同】。这三年虽然过得很快，但也发生了很多大大小小，五味杂陈的事情，自己在各个方面也有了更全面深入的认识。&lt;/p&gt;

&lt;p&gt;最近看到一些师兄师姐写的一些工作，生活感悟，想想自己再过几个月也正式工作 3 年整了，觉得也该写点东西，&lt;code class=&quot;highlighter-rouge&quot;&gt;回顾过去，反思现在，寄语未来&lt;/code&gt; 吧。这三年中，从最开始的软开，到现在的量化工程师，短短3年中得到了很多业内专业人士的指导，见识到了很多金融方面的新知，虽然没有做过交易相关的工作，但是我越来约觉得自己所做的事，和几年前《华尔街》里的很多场景都很相似，每每想到这些，我都感到非常幸运，没有想到多年前在心中埋下的对金融这个领域，佩服，向往和好奇的种子，在如今居然能生根发芽，这种感觉真的很奇妙。&lt;/p&gt;

&lt;p&gt;我想这一切也许真的不是简单的巧合，或许在几年前看《华尔街》的时候，就隐隐约约有一些变量在影响着自己，引导自己在毕业找工作的时候选择了现在的这家 fin-tech 公司，并且还能机缘巧合的在 datayes 做在我个人看来最 amazing 的产品。也许，真的应验了那句话：&lt;code class=&quot;highlighter-rouge&quot;&gt;What you are is what you have been. What you'll be is what you do now.&lt;/code&gt; 我也准备把工作这几年的一些感悟，思考记录下来，看看未来 3年，5年后，再回顾今天的这些文字，我会是怎样的一番心情呢？&lt;/p&gt;

&lt;p&gt;我列了一些自己想记录的列表，准备分几篇写下来，下面是这个列表，看看最后能不能写完啦，哈哈。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/thinking_1.png&quot; alt=&quot;thinking_1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其实我自己是有一个周记本的，一般每 1 ～ 3 周会写一次周记，记录最近发生的一些事，以及自己的一些思考和计划。原本打算把这篇博文也写到周记里的，不过想想既然是工作 3 周年的感想，也可以写到网上，让大家帮忙指导指导，提提建议啥的。下面图中这个本子是我 14 年 4月1号 开始工作后到现在写的周记本，基本上能保持一月至少一篇的节奏吧，本子差不多写了 2/3 了，现在有时候空闲下来还会翻翻，哈哈，真的挺有意思的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/thinking_2.png&quot; alt=&quot;thinking_2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里再次推荐一下，我觉得写周记是很有意义的一件事情，不一定非要每周都写，一月一次都行，只要你觉得有值得记录的事就行啦。我个人很喜欢写，第一个原因是写周记可以让自己在空余的时候冷静回顾和思考过去的一些事情，也能时刻提醒自己如何做事做人做更好的自己；其次，也是最重要的一个原因，是记录自己当前的状态，在以后很多时候可以随时翻来看看这些青春的回忆，肯定超有趣的，就跟看故事书一样，我现在还会偶尔翻翻自己大学期间写的周记，虽然不多，但是确实很有意义，会发现自己在一些观点上发生了一些改变，也会发现自己在一些观点上始终坚持同样的看法，非常有意思。&lt;/p&gt;

&lt;h2 id=&quot;3-to-be-continued&quot;&gt;3. To be continued…&lt;/h2&gt;

&lt;h2 id=&quot;这些资料你也许用得着&quot;&gt;这些资料，你也许用得着&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%8D%8E%E5%B0%94%E8%A1%97_(%E7%BA%AA%E5%BD%95%E7%89%87)&quot;&gt;华尔街 (纪录片)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9C%8B%E7%8D%A8%E7%AB%8B%E5%AE%A3%E8%A8%80&quot;&gt;美国独立宣言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://zhiqiang.org/blog/finance/riskmanage/how-knight-lost-440-millions.html&quot;&gt;骑士资本的高频交易事故&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.datayes.com&quot;&gt;DataYes: 通联数据，我所在的公司&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://uqer.io&quot;&gt;UQER: 优矿，我所在的项目组&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/thinkings-about-life-work-family-part-1&quot;&gt;工作 3 年后的一些思考【Part 1】&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/thinkings-about-life-work-family-part-2&quot;&gt;工作 3 年后的一些思考【Part 2】&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/thinkings-about-life-work-family-part-3&quot;&gt;工作 3 年后的一些思考【Part 3】&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
   <entry>
     <title>深度学习第一弹 —— MNIST for the Newbies</title>
     <link href="/mnist-tutoril-deep-learning-for-the-newbies"/>
     <updated>2017-04-21T00:00:00+08:00</updated>
     <id>/mnist-tutoril-deep-learning-for-the-newbies</id>
     <content type="html">&lt;h2 id=&quot;写在前面&quot;&gt;写在前面&lt;/h2&gt;

&lt;p&gt;最近抽时间看一些 AI 方面的东西，说实话，我一开始对这方面其实不是很重视的，毕竟现在发展还是处于很初级的阶段。但因为本身职业是跟金融有关的，最近看了不少产业相关的资料，也经常研究国家在各个产业链上的政策，以及经常看到不少国内外企业在 AI 方面的布局和成绩，觉得这个方向还是可圈可点的。所以还是准备花些时间掌握一些这方面的底层原理，做到知其然知其所以然。&lt;/p&gt;

&lt;p&gt;不过其实我内心还是挺害怕的，现在科技这么发达，没准儿到我 ～60 来岁的时候，真会出现 《I, Robot》电影中的那些场景。《I, Robot》是 2004 年我最喜欢的演员 威尔斯密斯 主演的一部讲机器人觉醒的科幻片，如今过去13年，想想这些导演的在当时的思维其实还是很具有前瞻性的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://litaotao.github.io/images/robot_1.jpg&quot; alt=&quot;robot_1.jpg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-ai-深度学习神经网络机器学习&quot;&gt;1. AI, 深度学习，神经网络，机器学习&lt;/h2&gt;

&lt;p&gt;现在整个行业上其实还是略显浮躁的，搞过线性回归的人说自己懂机器学习，搞过机器学习的说自己研究神经网络，搞过神经网络的说自己做深度学习，搞深度学习的直接说自己是 AI 专家了。&lt;/p&gt;

&lt;p&gt;不过话也说来，其实 &lt;code class=&quot;highlighter-rouge&quot;&gt;AI, 深度学习，神经网络，机器学习&lt;/code&gt; 这四个方面目前也没有非常明晰的分类标准，或者说，也许在不久的某一天，都不存在这样的分类了，也许到时候直接说成 &lt;code class=&quot;highlighter-rouge&quot;&gt;AI 的不同等级&lt;/code&gt; 吧。&lt;/p&gt;

&lt;p&gt;所以在表述这个问题上，我更倾向于交流做过的模型，研究过的模型。&lt;/p&gt;

&lt;h2 id=&quot;2-所以-mnist-是个啥&quot;&gt;2. 所以 MNIST 是个啥&lt;/h2&gt;

&lt;p&gt;在很多书，在线培训网站上，基本上涉及到神经网络，深度学习，AI 的内容，都是以 MNIST 例子来开讲的，同时很多讲这些主题的 blog，也几乎没有哪篇没有谈到 MNIST。不过话说，我估计应该没多少人知道 MNIST 是啥的缩写吧，这也是我很强调知其然知其所以然的原因，对新知识，新事物的学习过程，不应该是被饲养般的全吞下去，应该细细咀嚼，慢慢品尝其中的韵味。&lt;/p&gt;

&lt;p&gt;所以既然提到 AI，大家都先以 MNIST 作为入门例子，就连大 google 开放的 tensorflow 也是以 MNIST 作为开篇例子的，那 MNIST 究竟是个啥呢？&lt;/p&gt;

&lt;p&gt;MNIST 是 Mixed National Institute of Standards and Technology database 的简称，从英文原意上还挺难知道到底是干嘛的，不过从官方网站上最终还是找到了它的具体含义 &lt;a href=&quot;http://yann.lecun.com/exdb/mnist/&quot;&gt;http://yann.lecun.com/exdb/mnist/&lt;/a&gt;，MNIST 是一个数据库，这个数据库中存储了各个国家地区，不同标准的手写数字，并且是存储的内容都是结果标准化处理了的，专门用于关于手写体识别方面的技术应用。&lt;/p&gt;

&lt;h2 id=&quot;3-mnist-数据结构啥样子呢&quot;&gt;3. MNIST 数据结构啥样子呢&lt;/h2&gt;

&lt;p&gt;介绍 MNIST 的原理之前，我们先来看看它的数据结构是个啥样吧。这里我们直接复用 tensorflow 官方的代码，链接在这儿：&lt;a href=&quot;https://www.tensorflow.org/get_started/mnist/beginners&quot;&gt;MNIST For ML Beginners&lt;/a&gt;。或者也可以直接看我的 github 上的代码：&lt;a href=&quot;https://github.com/litaotao/tensorflow_guide/blob/master/Official%20Document%20-%20Section%201%20:%20get%20started/MNIST%20For%20ML%20Beginners.ipynb&quot;&gt;https://github.com/litaotao/tensorflow_guide/blob/master/Official%20Document%20-%20Section%201%20:%20get%20started/MNIST%20For%20ML%20Beginners.ipynb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;数据结构可以直接看下面的截图，我们分两部分来说：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.image&lt;/code&gt;: 是一个 ndarray，里面每一个元素是用来训练的图片数据&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.image[index]&lt;/code&gt;: 是一个大小为 (784, ) 的 ndarray，里面每一个元素代表这个图片【标准化为 28*28 大小的正方形】在每个像素框中的像素值【或者是灰度值】&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.labels&lt;/code&gt;: 是一个 ndarray，里面的每一个元素指 mnist.train.image 中根据下标对应的图片真实代表值&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.labels[index]&lt;/code&gt;: 是一个大小为 (10, ) 的 ndarray，里面每一个元素只有 0，1 两种取值，代表了 mnist.train.image[index] 这个图片对应的真实值&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://litaotao.github.io/images/robot_2_mnist.jpg&quot; alt=&quot;robot_2_mnist.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;举个例子，如上图所示：&lt;/p&gt;

&lt;p&gt;我们看下 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.images[0]&lt;/code&gt; 的具体内容，其代表一张标准化为 (28, 28) 的手写数字图片在每一个像素上的值，然后 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.labels[0]&lt;/code&gt;的值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]&lt;/code&gt;，其中第 1 个元素【下标为 1，序号从 0 开始哦】为 1，其他皆为 0，代表 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.images[0]&lt;/code&gt; 这张图片代表的真实值是 1。如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.labels[0]&lt;/code&gt; 的值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;[ 0.,  0.,  0.,  0.,  0.,  5.,  0.,  0.,  0.,  0.]&lt;/code&gt;，其中第 5 个元素【下标为 5，序号从 0 开始哦】为 1，其他皆为 0，则说明 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.images[0]&lt;/code&gt; 这张图片代表的真实值是 1。&lt;/p&gt;

&lt;p&gt;当然为了验证，可以把 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.images[0]&lt;/code&gt; 这张图画出来看看：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://litaotao.github.io/images/robot_3_mnist_pixel.jpg&quot; alt=&quot;robot_3_mnist_pixel.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;看到这里，再理解下面这两张图应该就比较轻松了吧：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://litaotao.github.io/images/robot_3_mnist-train-xs.png&quot; alt=&quot;robot_3_mnist-train-xs.png&quot; /&gt;
&lt;img src=&quot;http://litaotao.github.io/images/robot_4_mnist-train-ys.png&quot; alt=&quot;robot_4_mnist-train-ys.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-那么-softmax-又是个什么鬼&quot;&gt;4. 那么 softmax 又是个什么鬼&lt;/h2&gt;

&lt;p&gt;关于 softmax 其实我一开始也挺纳闷的，特别是看到一堆公式后，不过现在回顾来看，其实初学时也不必过于深究。现在可以先知道它和一般的回归有啥区别，以及它存在的意义及用途，之后再慢慢琢磨那些公式也可。因为有些东西，只有用起来才能理解其中的含义。&lt;/p&gt;

&lt;p&gt;我们常见的回归一般都是这种形式： &lt;code class=&quot;highlighter-rouge&quot;&gt;y = A * X + b&lt;/code&gt;，即给定一个 x 序列，输出一个特定的值。而 softmax 是指给定一个 x 序列，输出该序列符合某个结果的概率或者置信度。比如说，现在我们 x 是一个 28 * 28 = 784 长的一个 list，代表一张手写数字的像素序列，经过 softmax 回归后，可以得到这个像素序列分别属于 0 ～ 9 中，每个数字的概率。&lt;/p&gt;

&lt;h2 id=&quot;5-所以是时候揭开这个公式的神秘面纱了&quot;&gt;5. 所以，是时候揭开这个公式的神秘面纱了&lt;/h2&gt;

&lt;p&gt;在 tensorflow 的 &lt;a href=&quot;https://www.tensorflow.org/get_started/mnist/beginners&quot;&gt;MNIST For ML Beginners&lt;/a&gt; 中，最后的模型是这样的：&lt;code class=&quot;highlighter-rouge&quot;&gt;y = tf.nn.softmax(tf.matmul(x, W) + b)&lt;/code&gt;，其中核心部分就是理解 &lt;code class=&quot;highlighter-rouge&quot;&gt;tf.matmul(x, W) + b&lt;/code&gt; 这个内部模型的含义，以及该模型输出的结果，为了方便，我把矩阵 x, W 画出来供大家理解一下。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;内部模型：&lt;code class=&quot;highlighter-rouge&quot;&gt;y = tf.matmul(x, W) + b&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;y: 结果矩阵
&lt;img src=&quot;http://litaotao.github.io/images/robot_8_mnist_equation.png&quot; alt=&quot;robot_8_mnist_equation.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;x: 训练样本矩阵&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://litaotao.github.io/images/robot_6_mnist_pixel.png&quot; alt=&quot;robot_6_mnist_pixel.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;W: 权重矩阵，大小 768 x 10，相当于 10 个列向量，每个列向量代表对结果 0 ~ 9 的权重
&lt;img src=&quot;http://litaotao.github.io/images/robot_5_mnist_pixel.png&quot; alt=&quot;robot_5_mnist_pixel.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;b: bias 向量，代码中只是一个行向量，但在实际相加的时候，需要两个向量的shape 一样，tensorflow 中会自动根据矩阵结构来进行扩展，所以最后进行计算的时候实际上 b 是一个 n x 10 的矩阵，但是每一个行向量都是相同的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://litaotao.github.io/images/robot_10_mnist_pixel.png&quot; alt=&quot;robot_10_mnist_pixel.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;所以最后的公式其实是酱紫的
&lt;img src=&quot;http://litaotao.github.io/images/robot_9_mnist_equation.png&quot; alt=&quot;robot_9_mnist_equation.png&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;6-到这里了还该做些啥&quot;&gt;6. 到这里了，还该做些啥&lt;/h2&gt;

&lt;p&gt;到这里了，关于 MNIST 的话题算是差不多了，不过这部分其实还是有很多细节可以继续深究，优化的，特别是针对专门做这方面的研究的人来说。接下来的话，可以考虑考虑实现几个例子，然后继续学习后面的内容。就跟游戏打怪一样，一般一个游戏的主线只占了整个游戏情节的 70% 左右，如果一开始就要把所有 npc 搞一遍，把所有支线都通关，那进度肯定会慢很多了；所以我都喜欢先把主线走完，中途当然也可以偶尔过过支线内容，然后最后再返回来做支线任务，会有不同的感受的。&lt;/p&gt;

&lt;h2 id=&quot;7-最后的最后&quot;&gt;7. 最后的最后&lt;/h2&gt;

&lt;p&gt;博主其实只了解点机器学习，其他深度学习，神经网络和 AI 的东西很欠缺，所以本文或之后相关的文章出现错误不是巧合，而是很正常的哈，望各位大咖批斗轻点，哈哈。&lt;/p&gt;

&lt;h2 id=&quot;附注&quot;&gt;附注&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=iQdWX1327XQ&quot;&gt;What’s an MNIST&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://yann.lecun.com/exdb/mnist/&quot;&gt;http://yann.lecun.com/exdb/mnist/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tensorflow.org/get_started/mnist/beginners&quot;&gt;MNIST For ML Beginners&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hostmath.com/&quot;&gt;online latex equation editor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/learning/not-another-mnist-tutorial-with-tensorflow&quot;&gt;Not another MNIST tutorial with TensorFlow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://web.stanford.edu/class/cs20si/index.html&quot;&gt;CS 20SI: Tensorflow for Deep Learning Research&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://download.tensorflow.org/paper/whitepaper2015.pdf&quot;&gt;TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[文中的 latex 公式]&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span class=&quot;nt&quot;&gt;\begin{bmatrix}&lt;/span&gt;

x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;11&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;12&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;13&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;1,784&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;21&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;22&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;23&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;2,784&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,1&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,2&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,3&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,784&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;\end{bmatrix}&lt;/span&gt;

*

&lt;span class=&quot;nt&quot;&gt;\begin{bmatrix}&lt;/span&gt;

w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;11&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;12&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;13&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;1,10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;21&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;22&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;23&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;2,10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;784,1&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;784,2&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;784,3&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;784,10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;\end{bmatrix}&lt;/span&gt;

+ 

(n 行)
&lt;span class=&quot;nt&quot;&gt;\begin{bmatrix}&lt;/span&gt;

b&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;1&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; b&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;2&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; . . . &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; b&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;\end{bmatrix}&lt;/span&gt;

= 

&lt;span class=&quot;nt&quot;&gt;\begin{bmatrix}&lt;/span&gt;

y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;11&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;12&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;13&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;1,10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;21&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;22&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;23&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;2,10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,1&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,2&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,3&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;\end{bmatrix}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
   </entry>
   
   <entry>
     <title>『 Spark 』14. 一次 Spark SQL 性能提升10倍的经历</title>
     <link href="/spark-sql-parquet-optimize"/>
     <updated>2016-12-13T00:00:00+08:00</updated>
     <id>/spark-sql-parquet-optimize</id>
     <content type="html">&lt;h2 id=&quot;写在前面&quot;&gt;写在前面&lt;/h2&gt;

&lt;p&gt;本系列是综合了自己在学习spark过程中的理解记录 ＋ 对参考文章中的一些理解 ＋ 个人实践spark过程中的一些心得而来。写这样一个系列仅仅是为了梳理个人学习spark的笔记记录，所以一切以能够理解为主，没有必要的细节就不会记录了，而且文中有时候会出现英文原版文档，只要不影响理解，都不翻译了。若想深入了解，最好阅读参考文章和官方文档。&lt;/p&gt;

&lt;p&gt;其次，本系列是基于目前最新的 spark 1.6.0 系列开始的，spark 目前的更新速度很快，记录一下版本号还是必要的。 &lt;br /&gt;
最后，如果各位觉得内容有误，欢迎留言备注，所有留言 24 小时内必定回复，非常感谢。&lt;/p&gt;

&lt;p&gt;Tips: 如果插图看起来不明显，可以：1. 放大网页；2. 新标签中打开图片，查看原图哦；3. 点击右边目录上方的 &lt;em&gt;present mode&lt;/em&gt; 哦。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Notes&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;本篇开始，会渐渐的把版本升级到 2.0 上，后续的文章也会逐渐基于 2.0 来写；前面的文章就不改了，反正都是换汤不换药;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上一篇文章： 
&lt;a href=&quot;http://litaotao.github.io/spark-2.0-release-notes-zh?s=inner&quot;&gt;『 Spark 』13. Spark 2.0 Release Notes 中文版 &lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-遇到了啥问题&quot;&gt;1. 遇到了啥问题&lt;/h2&gt;

&lt;p&gt;是酱紫的，简单来说：并发执行 spark job 的时候，并发的提速很不明显。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/what_are_you_talking_about.png&quot; alt=&quot;what_are_you_talking_about.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;嗯，且听我慢慢道来，啰嗦点说，类似于我们内部有一个系统给分析师用，他们写一些 sql，在我们的 spark cluster 上跑。随着分析师越来越多，sql job 也越来越多，等待运行的时间也越来越长，我们就在想怎么把 sql 运行的时间加快一点。我们的整个架构是 spark 1.6.1 on YARN 的，经过分析一些 sql 发现其实大多数分析语句都是比较简单的统计 sql，集群资源也还算多，一条简单的 sql 语句就把整个集群资源的坑占着略显不合适，有点飞机马达装到拖拉机上的赶脚，所以第一步，我们想，支持 spark job 的并行运行。&lt;/p&gt;

&lt;p&gt;ok，初步方案有了，我们就做了如下几步改善工作：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;首先设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;spark.scheduler.mode&lt;/code&gt; 为 &lt;code class=&quot;highlighter-rouge&quot;&gt;FAIR&lt;/code&gt; 模式，首先 &lt;code class=&quot;highlighter-rouge&quot;&gt;spark.scheduler.mode&lt;/code&gt; 有 &lt;code class=&quot;highlighter-rouge&quot;&gt;FIFO&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;FAIR&lt;/code&gt; 两种模式，&lt;code class=&quot;highlighter-rouge&quot;&gt;FIFO&lt;/code&gt; 是说提交的job，都是顺序执行的，后提交的 job 一定要等之前提交的 job 完全执行结束后才可以执行；&lt;code class=&quot;highlighter-rouge&quot;&gt;FAIR&lt;/code&gt; 是说，如果之前提交的 job 没有用完集群资源的话，后提交的job可以即刻开始运行。关于这点在官方文档上有详细的解释：&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../images/schedule_mode.png&quot; alt=&quot;schedule_mode.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;其次，我们生成了 10 个 pool，所谓的 pool，可以理解为资源池，或者通道。你可以在提交 job 的时候指定提交到哪个 pool 里面，可以简单的理解为我们把所有的集群资源分成 10 份，然后在提交 job 的时候指定在哪一份资源中运行这个 job。&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../images/10_pool.png&quot; alt=&quot;10_pool.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最后，我们在提交 job 的时候指定提交到的 pool 名字，只需要在提交 job 之前设置一个 sparkContext 的参数即可: &lt;code class=&quot;highlighter-rouge&quot;&gt;sc.setLocalProperty(&quot;spark.scheduler.pool&quot;, &quot;your_pool_id&quot;)&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../images/pool_id.png&quot; alt=&quot;pool_id.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;看似很简单，但能知道上面这些配置的也算是用 spark 比较熟练的人了吧，我迫不及待的测试了一下速度，发现了一个从古至今的大真理：理想很美好，现实很骨干啊。测试下来，发现多个 job 并行运行的时间并没有节省多少。&lt;/p&gt;

&lt;h2 id=&quot;2-原因排查&quot;&gt;2. 原因排查&lt;/h2&gt;

&lt;p&gt;上面把问题说得很清楚了：多 job 并行的时候，运行速度并没有明显提升。但是原理上应该不会如此，只要一个 sql job 不需要全局所有集群资源，理论上来说会有较大提升的。下面是一组简单的数据对比：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/data_contrast_1.png&quot; alt=&quot;data_contrast_1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;虽然看到，并行计算后时间只需要之前的 50%，但是这里需要说明一下，这个数据不够稳定的哦，比如说偶尔会新增 10来秒 这样子的。这里 &lt;code class=&quot;highlighter-rouge&quot;&gt;暂且接受提升 50% 的速度这样一个结论吧&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;但是，理论上来说，还能提升更多，不满足 50% 的提升效率，我们接着深度解读 spark web ui 上的一些分析数据，尝试找找能否把速度再度提升一下。终于找到了核心原因，下面我就把整个排查的过程详细记录下来：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;找一个花费时间较长的 job，进去看看执行的详情，这里我们用 job id 为 796 的这个 job&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../images/spark_optimize_1.png&quot; alt=&quot;spark_optimize_1.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;发现 job 796 有两个 stage，且有 99% 的时间都花在第一个 stage 1590 上了，而且需要注意的是，这个 stage 有 237.6mb 的数据读取，有可能需要经过网络从其他 hdfs 节点读过来，难道跟网络 I/O 有关？继续点进去看看。&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../images/spark_optimize_2.png&quot; alt=&quot;spark_optimize_2.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;进来这个 stage 内部，似乎发现问题所在了，首先我们先关注下图中标记的几个点，可以总结出几个点：&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;首先，该 stage 内的所有任务在 executor 上真正执行的时间【可以理解为 cpu time】是 2s&lt;/li&gt;
      &lt;li&gt;其次，该 stage 内任务执行完成的时间是 1.1 m，大概是 66s，可以理解为【wall time】&lt;/li&gt;
      &lt;li&gt;该 stage 内所有的 task，&lt;code class=&quot;highlighter-rouge&quot;&gt;schedule delay&lt;/code&gt; 的时间中位数是 0.5s，最大达到 1s【真正执行的时间也才 2s 哦】&lt;/li&gt;
      &lt;li&gt;该 stage 内一共有 336 个task&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;../images/spark_optimize_3.png&quot; alt=&quot;spark_optimize_3.png&quot; /&gt;
  &lt;img src=&quot;../images/spark_optimize_4.png&quot; alt=&quot;spark_optimize_4.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;到这里，问题根源基本上已经知道了，即 job 796 的大多数时间都被消耗在 stage 1590 的 336 个task 的 secheduler delay 上面了。&lt;/p&gt;

&lt;h2 id=&quot;3-如何解决&quot;&gt;3. 如何解决&lt;/h2&gt;

&lt;p&gt;上面问题几乎已经明确了，现在就该看看肿么解决了。我当时是这样去考虑的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;为什么 scheduler delay 会这么大&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;因为资源不够，要解决这个问题，似乎唯一的办法就是增加集群资源了。可是哥们，集群是你想加就能加的吗？那可是要砸钱的呀？而且如果公司缺机器的话，想加集群资源也要经过 申请-&amp;gt;审批-&amp;gt;采购-&amp;gt;分配-&amp;gt;集群配置 大大小小几个阶段，说不一定等你找到女朋友了都还没搞定啊。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当时想着加资源这个方案短期不可取后，有那么几分钟是觉得有点烧脑的。我就静静的看着 web ui，心里在算，一个 task 如果平均 scheduler delay 0.5s 的话，这 336 个 task 就得 delay 118 秒，基本上都到 2 分钟了。这 delay 的时间可真够长的啊，就在算这个数值的时候，突然想到这样一个公式：&lt;code class=&quot;highlighter-rouge&quot;&gt;total delay time = average delay time * task number&lt;/code&gt;。现在我们的问题是要解决 total delay time，那完全可以从两方面去解决呀：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;降低 average delay time：目前来看似乎唯一的方法是砸钱加资源&lt;/li&gt;
  &lt;li&gt;降低 task 数：粗略来看，简单的降低 task 数的话，应该是能减少 total delay time 的，但是如果task 数降低了，意味着每个 task 需要处理的数据量就多了，那其他的时间应该是会增加一些的，比如说 &lt;code class=&quot;highlighter-rouge&quot;&gt;Task Deserialization Time, Result Serialization Time, GC Time, Duration&lt;/code&gt; 等。减少 task 数究竟能不能提高整体运行速度，似乎乍一看还真不好确定。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;反正砸钱加资源这个方案暂时是行不通的，要不就再仔细分析一下降低task数这个方案。这里我们在仔细参考一下下图中这一列指标：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/spark_optimize_5.png&quot; alt=&quot;spark_optimize_5.png&quot; /&gt;
&lt;img src=&quot;../images/spark_optimize_6.png&quot; alt=&quot;spark_optimize_6.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们用 75 分位的统计数据来做一个假设：假设我们把每一个 task 的数据量加 10 倍，那么预计的 task metrics 75 分位大概是一个什么样的数值，假设这些指标都是线性增长的话：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Duration: 扩大到 10 倍，14ms&lt;/li&gt;
  &lt;li&gt;Scheduler Delay: 这个指标不用估计&lt;/li&gt;
  &lt;li&gt;Task Deserialization Time: 扩大到 10 倍，6ms&lt;/li&gt;
  &lt;li&gt;GC Time: 扩大到 10 倍，最多1ms&lt;/li&gt;
  &lt;li&gt;Result Serialization Time: 扩大到 10 倍，最多1ms&lt;/li&gt;
  &lt;li&gt;Getting Result Time: 扩大到 10 倍，最多1ms&lt;/li&gt;
  &lt;li&gt;Peak Execution Memory: 扩大到 10 倍，最多 1b&lt;/li&gt;
  &lt;li&gt;Input Size / Records: 扩大到 10 倍，918.8 KB * 2 / 2&lt;/li&gt;
  &lt;li&gt;Shuffle Write Size / Records  0: 扩大到 10 倍，294.0 B * 2/ 20&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可以看到，这样大概估计下来，除去 Scheduler Delay 的时间，其实其他时间也没消耗多少，都是毫秒级的，看起来应该是完全可行的呀。&lt;/p&gt;

&lt;p&gt;正准备这样测试的时候，我忽然想到，为什么现在的 metrics 统计是这样的结构的啊，这么多 task？一般来说，一个 task 对应到 hdfs 上的一个 parquet 文件【该项目中所有数据文件都是用 parquet 压缩后存储到 hdfs 上的】，难道是现在存在 hdfs 上的 parquet 文件个数过多，每个文件太小？突然有一种恍然大悟的感觉，赶紧看看现在 hdfs 上文件的结构，如下所示：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;taotao@mac007:~/Desktop/dyes/git-mercury/mercury-computing&lt;span class=&quot;nv&quot;&gt;$hadoop&lt;/span&gt; fs &lt;span class=&quot;nt&quot;&gt;-ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ | &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tail
&lt;/span&gt;317  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt      1.3 M 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00310-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet
318  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt      1.4 M 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00311-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet
319  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt      2.9 M 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00312-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet
320  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt      1.2 M 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00313-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet
321  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt      1.9 M 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00314-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet
322  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt      1.7 M 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00315-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet
323  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt    899.4 K 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00316-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet
324  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt      2.3 M 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00317-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet
325  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt      1.0 M 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00318-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet
326  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt    460.9 K 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00319-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;可以看到，现在有 300 多个文件【上面只是一部分，还有十几个在另外一个文件夹里，一个 sql 会统计两个文件夹里的数据文件】，而且我仔细看了一下，每个文件大小最小的有很多 1kb 的，最大的有 2.9mb 的。难怪了，原来核心根源在这里。再结合上面关于 metrics 的分析，我心里大概确信了，只要把 parquet 文件的问题解决就行了，方法就是压缩 parquet 文件个数，控制每个 parquet 文件的大小即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/bingo.png&quot; alt=&quot;bingo.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;方法确定了，那就干咯。&lt;/p&gt;

&lt;h2 id=&quot;4-效果对比&quot;&gt;4. 效果对比&lt;/h2&gt;

&lt;p&gt;未来方便对比，我把 20161212 的数据文件处理了一下，保留 20161117 这天的数据文件【20161212 的数据文件整体上比 20161117 的数据文件要多 10%】，下面是对比结果：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;parquet 文件个数&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;20161117 这天&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;taotao@mac007:~/Desktop/dyes/git-mercury/mercury-computing&lt;span class=&quot;nv&quot;&gt;$hadoop&lt;/span&gt; fs &lt;span class=&quot;nt&quot;&gt;-ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_S&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tail&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 5
342  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt      1.7 M 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00315-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet
343  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt    899.4 K 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00316-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet
344  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt      2.3 M 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00317-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet
345  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt      1.0 M 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00318-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet
346  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt    460.9 K 2016-11-17 16:37 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161117/20161117_Transaction_SZ/part-r-00319-38d7cc53-60d2-40b3-a945-0cb5832f30de.gz.parquet&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;20161212 这天&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;taotao@mac007:~/Desktop/dyes/git-mercury/mercury-computing&lt;span class=&quot;nv&quot;&gt;$hadoop&lt;/span&gt; fs &lt;span class=&quot;nt&quot;&gt;-ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161212/20161212_Transaction_S&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tail&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 5
34  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt     19.2 M 2016-12-12 15:49 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161212/20161212_Transaction_SZ/part-r-00013-686bbce5-a7a1-4b5d-b25c-14cd9ddae283.gz.parquet
35  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt     10.7 M 2016-12-12 15:49 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161212/20161212_Transaction_SZ/part-r-00014-686bbce5-a7a1-4b5d-b25c-14cd9ddae283.gz.parquet
36  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt     26.0 M 2016-12-12 15:49 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161212/20161212_Transaction_SZ/part-r-00015-686bbce5-a7a1-4b5d-b25c-14cd9ddae283.gz.parquet
37  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt     20.1 M 2016-12-12 15:49 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161212/20161212_Transaction_SZ/part-r-00016-686bbce5-a7a1-4b5d-b25c-14cd9ddae283.gz.parquet
38  &lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;   3 taotao hfmkt      8.7 M 2016-12-12 15:49 hdfs://hadoop-archive-cluster/hfmkt/level2/datayes/parquet/20161212/20161212_Transaction_SZ/part-r-00017-686bbce5-a7a1-4b5d-b25c-14cd9ddae283.gz.parquet&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;100个job并发执行时间&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;20161117 这天：99s&lt;/li&gt;
  &lt;li&gt;20161212 这天：16s&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Spark Web UI 上一个 job 对比&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;20161117 这天&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../images/spark_optimize_2.png&quot; alt=&quot;spark_optimize_2.png&quot; /&gt;
&lt;img src=&quot;../images/spark_optimize_3.png&quot; alt=&quot;spark_optimize_3.png&quot; /&gt;
&lt;img src=&quot;../images/spark_optimize_4.png&quot; alt=&quot;spark_optimize_4.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;20161212 这天&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../images/spark_optimize_7.png&quot; alt=&quot;spark_optimize_7.png&quot; /&gt;
&lt;img src=&quot;../images/spark_optimize_9.png&quot; alt=&quot;spark_optimize_9.png&quot; /&gt;
&lt;img src=&quot;../images/spark_optimize_8.png&quot; alt=&quot;spark_optimize_8.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-总结&quot;&gt;5. 总结&lt;/h2&gt;

&lt;p&gt;首先，需要说明的是，这次优化应该还有提升的空间，虽然优化后整体从 204s 到 99s 再到 16s，提升了十倍多，确实很大，但是最后我们还是发现 16s 的情况下，scheduler delay 和 Task Deserialization Time 还是有占用了大部分时间，这里我觉得不能一味的在文件个数和大小上下功夫了。需要考虑到用户场景来做一个权衡。所以越到后期的优化，越考验产品功能的设计，当然这是后话了，就不在本文范围内讨论。&lt;/p&gt;

&lt;p&gt;其次，这次优化，从发现问题，追根溯源，到最后解决问题，大概花了 1 小时，基本上还算不错。通过这次排查，还是真心感受到 spark 设计的完善，不得不说，作为一个开源项目，spark 最大的特点，我觉得应该是 spark 是由一帮非程序员设计实现的，而是一帮由程序员，架构师，产品经理组合起来一起干的，更像是一个产品，而不是一个开源项目。怪不得这帮人要去开个公司【databricks：我最看好的公司之一】，看来真的是 born this way。说到这，不得不感触一下，对比 spark 这帮人，现实中真的有太多指令式程序员了，老板叫干嘛就干嘛，丝毫不关注产品功能，未来发展，甚至很多工程师都不用自己开发的产品。我不知道这样的人是怎么想的，反正我自己觉得这样挺可怜的。&lt;/p&gt;

&lt;p&gt;最后，好久都没写 spark 相关的文章了，距离上一片水文过去整整两个月了。最近两个月真心累成狗了，要做好项目，关注竞品的发展，行业动态；还要经常出去拜访客户，维护客户；同时也要做好产品未来几个月甚至几个季度的规划，偶尔还要搞搞运营啥的。文章写少了，但视野真心见长了，anyway，未来再接着抽空多记录点文字下来，哈哈。&lt;/p&gt;

&lt;h2 id=&quot;6-打开微信扫一扫点一点棒棒的_&quot;&gt;6. 打开微信，扫一扫，点一点，棒棒的，^_^&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;../images/wechat_pay_6-6.png&quot; alt=&quot;wechat_pay_6-6.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考文章&quot;&gt;参考文章&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://parquet.apache.org/documentation/latest/&quot;&gt;Apache Parquet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://spark.apache.org/docs/latest/job-scheduling.html#scheduling-within-an-application&quot;&gt;scheduling-within-an-application&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://spark.apache.org/docs/latest/configuration.html#scheduling&quot;&gt;configuration scheduling&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://spark.apache.org/docs/latest/job-scheduling.html#configuring-pool-properties&quot;&gt;job-scheduling.html configuring-pool-properties&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/yurunmiao/p/5195754.html&quot;&gt;Spark使用CombineTextInputFormat缓解小文件过多导致Task数目过多的问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.cloudera.com/blog/2009/02/the-small-files-problem/&quot;&gt;The Small Files Problem&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://forums.databricks.com/questions/1509/parquet-file-merging-or-other-optimisation-tips.html&quot;&gt;Parquet file merging or other optimisation tips&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://spark-summit.org/2015/events/data-storage-tips-for-optimal-spark-performance/&quot;&gt;Data Storage Tips for Optimal Spark Performance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;本系列文章链接&quot;&gt;本系列文章链接&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/introduction-to-spark?s=inner&quot;&gt;『 Spark 』1. spark 简介 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-questions-concepts?s=inner&quot;&gt;『 Spark 』2. spark 基本概念解析 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-programming-model?s=inner&quot;&gt;『 Spark 』3. spark 编程模式 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-what-is-rdd?s=inner&quot;&gt;『 Spark 』4. spark 之 RDD &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-resouces-blogs-paper?s=inner&quot;&gt;『 Spark 』5. 这些年，你不能错过的 spark 学习资源 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/deep-into-spark-exection-model?s=inner&quot;&gt;『 Spark 』6. 深入研究 spark 运行原理之 job, stage, task&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-dataframe-introduction?s=inner&quot;&gt;『 Spark 』7. 使用 Spark DataFrame 进行大数据分析&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-in-finance-and-investing?s=inner&quot;&gt;『 Spark 』8. 实战案例 ｜ Spark 在金融领域的应用 ｜ 日内走势预测&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/ipython-notebook-spark?s=inner&quot;&gt;『 Spark 』9. 搭建 IPython + Notebook + Spark 开发环境&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/boost-spark-application-performance?s=inner&quot;&gt;『 Spark 』10. spark 应用程序性能优化｜12 个优化方法&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-mlib-machine-learning?s=inner&quot;&gt;『 Spark 』11. spark 机器学习&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-2.0-faster-easier-smarter?s=inner&quot;&gt;『 Spark 』12. Spark 2.0 特性介绍&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-2.0-release-notes-zh?s=inner&quot;&gt;『 Spark 』13. Spark 2.0 Release Notes 中文版 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-sql-parquet-optimize?s=inner&quot;&gt;『 Spark 』14. 一次 Spark SQL 性能优化之旅&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
   <entry>
     <title>『 读书笔记 』9月，10月读书总结｜博文推荐</title>
     <link href="/books-recommend-and-summarize-on-sep-2016"/>
     <updated>2016-12-05T00:00:00+08:00</updated>
     <id>/books-recommend-and-summarize-on-sep-2016</id>
     <content type="html">&lt;h2 id=&quot;写在前面&quot;&gt;写在前面&lt;/h2&gt;

&lt;p&gt;计划是每月读 5-10 本书，书籍类型大概是三个方面的：金融，技术，创业。之所以选择这三个方面，一方面是因为自己对这三个方面都很有兴趣，其次是被 linkedin 创始人 Hoffman 的 &lt;a href=&quot;http://techcrunch.com/2012/02/14/in-startups-and-life-you-need-plan-a-b-and-z/&quot;&gt;ABZ 理论&lt;/a&gt; 深度影响。建议大家都看看 abz 理论那篇文章，如果我有空，也会整理一些常用的这类理论模型到博客里的。&lt;/p&gt;

&lt;p&gt;月底读书总结的形式都很简单，只是简单的一个列表和简单的书评，对觉得比较好的书会有单独的读书笔记。另外推荐大家用 excel 来做一些简单的工作管理，我现在就用 google docs 来做工作安排和读书计划，个人感觉比一些常用的神马协同软件强大太多了，简单，够用，就行了。工作中见过太多人把时间都花到使用那些协同软件上去，不得不说避重就轻了，适得其反，哈哈。&lt;/p&gt;

&lt;p&gt;下面是一张我用 google docs 来做本月读书安排的截图，不同颜色代表不同类别的数据，清晰明了实用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/books_9_10.png&quot; alt=&quot;books_9_10.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ps: 我对好书的定  义很简单：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;给自己有所启发的&lt;/li&gt;
  &lt;li&gt;高质量的，专业的教程类书籍&lt;/li&gt;
  &lt;li&gt;后期会再度回首的书&lt;/li&gt;
  &lt;li&gt;看完后会打算赠送给盆友看的书&lt;/li&gt;
  &lt;li&gt;留着给儿子看的书 [好吧，目前我只有个宝贝侄儿，哈哈]&lt;/li&gt;
  &lt;li&gt;最后一条，印刷质量要好&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上月读书总结：&lt;a href=&quot;../books-recommend-and-summarize-on-july-2016&quot;&gt;『 读书笔记 』坚持读书 6 个多月的感受&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-读书总结&quot;&gt;1. 读书总结&lt;/h2&gt;

&lt;h3 id=&quot;11-公司财务原理第七八章&quot;&gt;1.1 公司财务原理，第七，八章&lt;/h3&gt;

&lt;p&gt;这本书越来越有意思了，曾经听一个朋友说这本书就是讲一些公司财务的东西，看来是顾名思义去了吧。其实就跟我第一次总结的一样，这本书从小来说，能让你了解公司财务，金融市场运作的一些情况，对从事投资方面的人来说很有用；从大来说，这本书能交给你不少关于如何开展，运作一个公司的很多规则和经验，非常有用。严重推荐，值得认真研读。&lt;/p&gt;

&lt;p&gt;比如说，第七，八章就没有讲什么公司财务的东西了，而是讲一些风险，资产定价相关的东西，非常有用。&lt;/p&gt;

&lt;p&gt;总结：这本书什么都好，除了原版的太贵了，我看的是第十版原版的打印版，100多，黑白色的；原版印刷版的是彩色版的，死贵了，但是看起来真是贼爽。我有时候都是电子版的印刷版结合黑白色的打印版一起来看的。&lt;/p&gt;

&lt;p&gt;推荐指数：&lt;code class=&quot;highlighter-rouge&quot;&gt;* * * * *&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;下面是一张原版印刷版的电子截图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/amazing_book.png&quot; alt=&quot;amazing_book.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;12-怪诞行为学&quot;&gt;1.2 &lt;a href=&quot;https://www.amazon.cn/%E6%80%AA%E8%AF%9E%E8%A1%8C%E4%B8%BA%E5%AD%A6-%E5%8F%AF%E9%A2%84%E6%B5%8B%E7%9A%84%E9%9D%9E%E7%90%86%E6%80%A7-%E4%B8%B9%E2%80%A2%E8%89%BE%E7%91%9E%E9%87%8C/dp/B0040NO84W/ref=sr_1_1?ie=UTF8&amp;amp;qid=1478565337&amp;amp;sr=8-1&amp;amp;keywords=%E6%80%AA%E8%AF%9E%E8%A1%8C%E4%B8%BA%E5%AD%A6&quot;&gt;怪诞行为学&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;以前大学的时候就浏览过这本书，当时就觉得非常有意思。如今再次品读，更有一番韵味啊。现在市场上还有其他几本非常相似的书，比如说《怪诞行为学2》，《怪诞经济学》，《怪诞心理学》什么的。虽然我觉得先品读一本就够了，把其中的道理领悟就够了。但是我也准备后期抽时间读读其他类型的书，看看是否能找到一些更好玩的东西。&lt;/p&gt;

&lt;p&gt;总结：很有意思的一本书。&lt;/p&gt;

&lt;p&gt;推荐指数：&lt;code class=&quot;highlighter-rouge&quot;&gt;* * * * *&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;13-说谎者的扑克牌&quot;&gt;1.3 &lt;a href=&quot;https://www.amazon.cn/%E8%AF%B4%E8%B0%8E%E8%80%85%E7%9A%84%E6%89%91%E5%85%8B%E7%89%8C-%E5%8D%8E%E5%B0%94%E8%A1%97%E7%9A%84%E6%8A%95%E8%B5%84%E6%B8%B8%E6%88%8F-%E8%BF%88%E5%85%8B%E5%B0%94%E2%80%A2%E5%88%98%E6%98%93%E6%96%AF/dp/B00DYRVNJS/ref=sr_1_1?ie=UTF8&amp;amp;qid=1478565669&amp;amp;sr=8-1&amp;amp;keywords=%E8%AF%B4%E8%B0%8E%E8%80%85%E7%9A%84%E6%89%91%E5%85%8B%E7%89%8C&quot;&gt;说谎者的扑克牌&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;这本书是从一个曾在所罗门任职的交易员角度，讲了一些在过去几十年里华尔街的一些变化和华尔街人的各种状态。可能是中文翻译的问题，有些地方读起来感觉很干涩。下次读作者的另外一本出名作《大空头》的时候，准备看看原版的了。&lt;/p&gt;

&lt;p&gt;总结：还行吧，如果想了解华尔街以及上世纪华尔街人的一些心理转变的话，可以去看看。&lt;/p&gt;

&lt;p&gt;推荐指数：&lt;code class=&quot;highlighter-rouge&quot;&gt;* * *&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;14-uwsgi-document&quot;&gt;1.4 &lt;a href=&quot;https://uwsgi-docs.readthedocs.io/en/latest/&quot;&gt;uwsgi document&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;这是 uwsgi 的官方文档，因为之前用 uwsgi 发现一些问题，所以准备系统的看看官方文档。虽然 uwsgi 的文档有的地方写得很简单，不好理解，官方也没有例子来讲解，但是看了之后还是收获多多的。&lt;/p&gt;

&lt;p&gt;总结：新手可以直接 copy 别人的 uwsgi 配置文件就行了，要是想升级一下自己的话，推荐多仔细读读相关官方文档。对于那些随便 copy 别人的代码，然后出了问题第一时间就是去 &lt;code class=&quot;highlighter-rouge&quot;&gt;请教&lt;/code&gt; 的人，哥一向是懒得理的。&lt;/p&gt;

&lt;p&gt;推荐指数：&lt;code class=&quot;highlighter-rouge&quot;&gt;* * * *&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;15-gunicorn-document&quot;&gt;1.5 &lt;a href=&quot;http://docs.gunicorn.org/en/latest/instrumentation.html&quot;&gt;gunicorn document&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;之所以看了 uwsgi 的文档，还想看 gunicorn 的文档，有以下几个原因：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;我们的项目里用的是 uwsgi，但是听说 gunicorn 也非常厉害，所以也想看看 gunicorn 的肌肉；&lt;/li&gt;
  &lt;li&gt;看 uwsgi 的文档的时候，发现有的地方写得非常简洁到难懂，所以准备看看 gunicorn 的文档，如果 gunicorn 的文档比较 nice 的话，后期的项目可以考虑试试 gunicorn；&lt;/li&gt;
  &lt;li&gt;uwsgi 的源代码是用 c 写的，gunicorn 的源代码是用 python 写的，相对来说 gunicorn 的源代码更好读【当然我不是推荐什么东西都去读源代码，除非必要的时候】&lt;/li&gt;
  &lt;li&gt;uwsgi 的时间比较长了，gunicorn 比较年轻，我都喜欢比较年轻的东西，因为一般来说越新的东西在设计之初都会考虑得更全面一些，都会吸收一下前辈们的经验；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;总结：gunicorn 的文档相对于 uwsgi 来说是好了一些，但也不是事无巨细，更多情况下还是需要自己多去尝试和google。&lt;/p&gt;

&lt;p&gt;推荐指数：&lt;code class=&quot;highlighter-rouge&quot;&gt;* * * *&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;16-scala-school&quot;&gt;1.6 &lt;a href=&quot;https://twitter.github.io/scala_school/zh_cn/index.html&quot;&gt;scala school&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;最近想学学 scala，于是找到了 twitter 出的这个在线 scala 教程，个人觉得虽然不错，但似乎不太合我自己的口味，准备换一本书系统的读读。&lt;/p&gt;

&lt;p&gt;总结：我相信 twitter 出的教程，可能是自己水土不服吧，哈哈，准备看看 《快学 scala》肿么样。&lt;/p&gt;

&lt;p&gt;推荐指数：&lt;code class=&quot;highlighter-rouge&quot;&gt;* * * *&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;17-一看就懂的新公司开办全图解&quot;&gt;1.7 &lt;a href=&quot;https://www.amazon.cn/%E4%B8%80%E7%9C%8B%E5%B0%B1%E6%87%82%E7%9A%84%E6%96%B0%E5%85%AC%E5%8F%B8%E5%BC%80%E5%8A%9E%E5%85%A8%E5%9B%BE%E8%A7%A3-%E6%9D%A8%E5%B0%8F%E4%B8%BD/dp/B01G8JLK9G/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1479100767&amp;amp;sr=1-1&amp;amp;keywords=%E4%B8%80%E7%9C%8B%E5%B0%B1%E6%87%82%E7%9A%84%E6%96%B0%E5%85%AC%E5%8F%B8%E5%BC%80%E5%8A%9E%E5%85%A8%E5%9B%BE%E8%A7%A3&quot;&gt;一看就懂的新公司开办全图解&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;最近买了一套创业的大白书来看，这是其中一本。首先内容上来说，对我这种大白真的是够用了，当然政策一直在变，也许到自己真正创业的时候，很多东西都会不一样了。但是我一贯的看法是：万变不离其宗。就算规则，政策变了，只要自己掌握一些标准的流程怎么走，到时候直接电话去相关机构问就行了，再怎么说也不会无头苍蝇乱撞。再说说看完后的感受，尼玛就是8个字：想开个公司真心难。一系列的开公司前的准备，过程中要办那么多证件，开完后要考虑招人，财务等等。关键最后还看到公司所得税那部分，尼玛居然要 25% 的所得税，这下终于知道为啥有辣么多公司要逃税漏税了，这赋税真心太重了啊。以后自己要是开公司了，一定找几个学税法的同学想想怎么 &lt;code class=&quot;highlighter-rouge&quot;&gt;交税&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;总结：本书对大白挺有用的，但是要注意的是，本书只是介绍一般开公司的一些流程，具体到你准备去干的时候，尽量先电话问清楚相关机构，要是能找到有过这方面的经验的人就更好了。&lt;/p&gt;

&lt;p&gt;推荐指数：&lt;code class=&quot;highlighter-rouge&quot;&gt;* * * *&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;18-best-python-problems-on-stackoverflow&quot;&gt;1.8 &lt;a href=&quot;http://stackoverflow.com/questions/tagged/python&quot;&gt;Best Python Problems on Stackoverflow&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;都说想要了解一座城，最好的方法就是去走走。我认为要想深入了解一门语言，除了读书，实践，更好的方法是去社区看看，看看大家在这门语言上都遇到过哪些问题，以及怎样去解决这些问题的。所以我整理了一些我觉得比较有意义的问题，在这篇文章中，不间断更新。&lt;/p&gt;

&lt;p&gt;总结：刀不磨，不会快。&lt;/p&gt;

&lt;p&gt;推荐指数：&lt;code class=&quot;highlighter-rouge&quot;&gt;* * * * *&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;19-超简交易交易高手速成手册&quot;&gt;1.9 &lt;a href=&quot;&quot;&gt;超简交易：交易高手速成手册&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;这是在 &lt;code class=&quot;highlighter-rouge&quot;&gt;超简交易&lt;/code&gt; 这个公众号整理的一本电子书，全书有将近 400 页，内容整理得还是非常好的。之前原本打算把这个公众号的一些文章整理来系统的看看，后来居然出了本电子书，不得不赞一下。本书内容还行，着重讲概念，例子也很仔细，可以粗看一遍，在后期应用的时候再回来细读，遇到再细节的问题的时候，就可以查查其他书籍了。&lt;/p&gt;

&lt;p&gt;总结：只能说感谢，电子书做得挺仔细的，非常好。&lt;/p&gt;

&lt;p&gt;推荐指数：&lt;code class=&quot;highlighter-rouge&quot;&gt;* * * *&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;110-金融市场与金融机构原书第7版-华章教材经典译丛-第123章&quot;&gt;1.10 &lt;a href=&quot;https://www.amazon.cn/%E9%87%91%E8%9E%8D%E5%B8%82%E5%9C%BA%E4%B8%8E%E9%87%91%E8%9E%8D%E6%9C%BA%E6%9E%84-%E5%BC%97%E9%9B%B7%E5%BE%B7%E9%87%8C%E5%85%8B-S-%E7%B1%B3%E4%BB%80%E9%87%91-%E6%96%AF%E5%9D%A6%E5%88%A9-G-%E5%9F%83%E9%87%91%E6%96%AF-%E8%91%97/dp/B00UFDW1AE&quot;&gt;金融市场与金融机构（原书第7版） (华章教材经典译丛) 第1，2，3章&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;这本书是配合 coursera 上的课程 &lt;a href=&quot;https://www.coursera.org/learn/financial-markets/home/info&quot;&gt;Basic Principles of Finance and Risk Management&lt;/a&gt; 来看的。目前这门课程我的安排是每个月上 3～4 个 week，然后再配合看 &lt;a href=&quot;&quot;&gt;金融市场与金融机构&lt;/a&gt; 这本书的一些章节。首先需要明确的是，这本书和 coursera 上的课程并不是完全匹配的，但是都是讲金融市场和金融机构的，coursera 上的相对要讲得简单一点，毕竟是网络课程，看这本书可以更加深入，系统的了解相关知识。此外，我是看 kindle 版本的，质量确实很好，书的内容本身也写得非常好。&lt;/p&gt;

&lt;p&gt;总结：非常好的一本书，可以系统的了解金融市场和金融机构的东西。&lt;/p&gt;

&lt;p&gt;推荐指数：&lt;code class=&quot;highlighter-rouge&quot;&gt;* * * * *&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;111-量化投资策略与技术&quot;&gt;1.11 &lt;a href=&quot;https://www.amazon.cn/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84-%E7%AD%96%E7%95%A5%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%B8%81%E9%B9%8F/dp/B00FF1Y1EK/ref=sr_1_1?ie=UTF8&amp;amp;qid=1480381034&amp;amp;sr=8-1&amp;amp;keywords=%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84%E2%80%94%E7%AD%96%E7%95%A5%E4%B8%8E%E6%8A%80%E6%9C%AF&quot;&gt;量化投资—策略与技术&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;这个月也把丁鹏的这本书给看了，网上关于这本书的讨论很多，有喷的，有喷的，还有喷的。就我个人来看，我确实承认这本书里面的内容有的地方也许有一些问题，但是还不至于到大家所说的那个地步，当然我也不相信丁鹏所说的他自己的那个 d-alpha 系统了。原因很简单，这本书目前应该就卖出7500本左右。假设后期又加印了，那比如说卖出了 10000 本，每本定价 99 元，那总共也才卖了 99w，一般写书稿费有按页数算的，也有按销量提成的。如果按照最高提成【20%左右】来算的话，写这本书也才能赚个 99w * 20%，20w 左右。乍看起来还不错，可是自己想想，如果你自己真有这么多好的投资系统和策略，赚这 20w 不是轻轻松松的吗？干嘛还要写书呢【当然如果花个万儿八千雇个大学生当枪手就不一定了，哈哈】。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/dingpeng_books.png&quot; alt=&quot;dingpeng_books.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上面只是简单的一个分析，言归正传。这本书内容上我觉得还是不错的，至少不会是看了之后还会有所收获的。其实每本书都有自己的优缺点，别老抱着看完一本书，搞定一个行业的心态去看。&lt;/p&gt;

&lt;p&gt;总结：每本书就跟每个人一样，都有自己的优缺点；看书如待人，水至清则无鱼嘛。&lt;/p&gt;

&lt;p&gt;推荐指数：&lt;code class=&quot;highlighter-rouge&quot;&gt;* * * *&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-看片儿&quot;&gt;2. 看片儿&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ted.com/talks/bettina_warburg_how_the_blockchain_will_radically_transform_the_economy&quot;&gt;How the blockchain will radically transform the economy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;泡沫吹吧吹吧不是罪。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=w4RLfVxTGH4&quot;&gt;Why you think you’re right – even if you’re wrong Julia Galef&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;你说的我们都懂，可是臣妾做不到啊。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=CX_Krxq5eUI&quot;&gt;Jonas Eliasson: How to solve traffic jams&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;最近看的几个 ted 质量都好低啊，ted 不会也要越做越差了吧。还是看看之前的 ted 吧。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NzA1MTcyMA==&amp;amp;mid=2651162338&amp;amp;idx=1&amp;amp;sn=6d1f5a45dbbf722d8afcc2ad7bfe01c2&amp;amp;chksm=bd2ecac58a5943d3b2f5da754896fbd39d9bd5b27e76386166462d5bd1f807622fd53f4ac3ca&amp;amp;mpshare=1&amp;amp;scene=2&amp;amp;srcid=1124M6cbvvyzoshOwQckj8K0&amp;amp;key=9ed31d4918c154c803f3f803618c1e3615abd26ecec3abd5b0b0e0af160a7aca3e9019bcd7ce8801e1d6ba867930111a&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=bCi8Vd6N3xy1rQ3QvUJZ%2FhFC39d4n2lnpUnSPAKHQoiJFIscVimSdhmQiGdBRmMg&quot;&gt;台湾最新走心广告：致25岁还一无是处的你！&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=CyElHdaqkjo&quot;&gt;How to raise successful kids – without over-parenting Julie Lythcott-Haims&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;终于看到一个非常不错的 TED 了，主讲人真是太有激情了，哈哈。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Ks-_Mh1QhMc&quot;&gt;Your body language shapes who you are Amy Cuddy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;非常非常非常赞的一个 talk，主讲人也超有魅力的哦。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;3-博文推荐&quot;&gt;3. 博文推荐&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA5MDAxMjcwOQ==&amp;amp;mid=2447614867&amp;amp;idx=1&amp;amp;sn=43059c321ee677439178f5d034343528&amp;amp;chksm=84052ed9b372a7cfde9abf42516e3916c601febb4b3e79cd4edec4a2eee625119ad14d9d7667&amp;amp;mpshare=1&amp;amp;scene=2&amp;amp;srcid=101113deGruE0jtN53Y4NSMy&amp;amp;key=c50f8b988e61749a567ba477763007f4301bfaff3d7790f6ebe4d3f8ced508919dc8c96eda38bbb62d63bfd8c073e283&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=DcoELySNvbXVGG7G%2BfzkWJ2yAN%2BDritBJteCurcvOPD4pmdqdOdBdRT%2Bjw59klVv&quot;&gt;吴军博士硅谷第一封来信：不做伪工作者&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/20259295/answer/125138094?from=timeline&amp;amp;isappinstalled=0&quot;&gt;程序员怎么升职？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA5MzA2OTczMg==&amp;amp;mid=2650874597&amp;amp;idx=1&amp;amp;sn=c2bc3ba62503dbb6bdf1be5fd4813daf&amp;amp;chksm=8b960a2ebce183381b9ef6375c5a170373766a6365eec16ba42e2c2c77162582571a5649baaa&amp;amp;mpshare=1&amp;amp;scene=2&amp;amp;srcid=1011epbrL0yhQDPwQSvrQxlU&amp;amp;key=502b9ab53198616f06e7f6bbcc0f86eb13be7ac16a8c45cf3b3d314f5aedd83b05955fe4cdccfc13ca26e92f1e277b90&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=WRIhMgloARtS0w69StWALDUe0ZPHP9Gs7XsWyH%2BXSEYKO9t2RbqJlyJqDL7x2BQd&quot;&gt;他用2年时间，把中国34个省市名字重新设计一遍，无意间惊艳了超500万网友&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;此等人才，只可遇不可求啊。&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/BYRans/p/5945667.html&quot;&gt;Spark存储管理（读书笔记）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://36kr.com/p/5053161.html&quot;&gt;【行研】投资交给机器，数字化投顾进场金融投资——FinTech 细分领域研究报告&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI5MzExNDgxMw==&amp;amp;mid=2650615197&amp;amp;idx=1&amp;amp;sn=04c87d67056d1ea1ce0f4e2a37a648d0&amp;amp;chksm=f47e8b4fc30902599390f34117f42573a6c7dfa97dc4c83027c65f49c5b56b6fd9e144eaaead&amp;amp;mpshare=1&amp;amp;scene=2&amp;amp;srcid=1008DemxxOKbHLURwCH1WY1b&amp;amp;key=502b9ab53198616f03c012e26b2e40df027b17064e11d483a2777eb7b74e52228024e89ad87689abb227e9db3e757ecb&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=WRIhMgloARtS0w69StWALDUe0ZPHP9Gs7XsWyH%2BXSEYKO9t2RbqJlyJqDL7x2BQd&quot;&gt;庄辰超：回顾去哪儿的这些年，最让我骄傲的是收获了这9点管理心得&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;部分思想可能有些许激进，不过万事都讲究一个度，控制好度就是最好的。毕竟物极必反。&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4NTE1MDEwNQ==&amp;amp;mid=2670931644&amp;amp;idx=1&amp;amp;sn=53b9d17b3fd55d195e36a965dbfa27c9&amp;amp;chksm=851bde4ab26c575c10a3deff6c00f39df781c93e524a6db7589e6a50fc596401b52136359584&amp;amp;scene=0&amp;amp;key=502b9ab53198616f0d3c97b30212bb47ec8ca1eac1d99e2bfec8b83fddbeba828a84f210444606f392604add91a43a2e&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=WRIhMgloARtS0w69StWALDUe0ZPHP9Gs7XsWyH%2BXSEYKO9t2RbqJlyJqDL7x2BQd&quot;&gt;世界经济危机简史（1788-2000年）上&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4NTE1MDEwNQ==&amp;amp;mid=2670931646&amp;amp;idx=1&amp;amp;sn=5d8c001e20c4d9639f9d801f2a99b7c0&amp;amp;chksm=851bde48b26c575e5654a8a2cc749cf2beb60615ac226ca437ecc3414f3c4e211d59ad4624cf&amp;amp;scene=0&amp;amp;key=502b9ab53198616fac715cfd89d4cd684b2e7b345114e400e6054baa39781b03ebd11f0bf6113e49c9355fc5d9c88498&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=WRIhMgloARtS0w69StWALDUe0ZPHP9Gs7XsWyH%2BXSEYKO9t2RbqJlyJqDL7x2BQd&quot;&gt;世界经济危机简史（1788-2000年）中&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4NTE1MDEwNQ==&amp;amp;mid=2670931648&amp;amp;idx=1&amp;amp;sn=6d4edb5a0c75642da4ba54f77a570cae&amp;amp;chksm=851bde36b26c5720ef0068e280fd1594fbcab3e096d52953791e699646974e1f526a04992237&amp;amp;scene=0&amp;amp;key=502b9ab53198616f7fc0cba7403f81d680e173245096ee9887a85dc0c155d23f6d4856cec826a8fa8282608ebc62555b&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=WRIhMgloARtS0w69StWALDUe0ZPHP9Gs7XsWyH%2BXSEYKO9t2RbqJlyJqDL7x2BQd&quot;&gt;世界经济危机简史（1788-2000年）下&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/51043149/answer/124226744?from=timeline&amp;amp;isappinstalled=1&quot;&gt;如何看待人民日报微信公众号评论员文章称“失去奋斗，房产再多我们也将无家可归”？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://tech.glowing.com/cn/python-profiling/&quot;&gt;python-profiling&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;美国大选相关文章
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzAwMDM3MDMzMw==&amp;amp;mid=2653401652&amp;amp;idx=3&amp;amp;sn=8a9d1c8ec5546cf6302d9d8c25bfe086&amp;amp;chksm=813ae1c6b64d68d081daa18c144ce65a36e3e4ff99b8f64498ee524bb4ad3b533586567367c2&amp;amp;mpshare=1&amp;amp;scene=24&amp;amp;srcid=1109XDQ8Fo3maRU70G6wf9gw&amp;amp;key=cde9f53f8128acbd003fca83f5489233847f944ff89780143691705703b736752e4857dc15569191772a91deadb54eed&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=RORT6loaK1Xc4EjCOnHYqUceRy%2B%2BlElIjia0Fib85PVuxJJHTMhLibyFBjQh1eZP&quot;&gt;一文看懂美国大选如何影响资本市场&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA5NTIwODMwNw==&amp;amp;mid=2651065084&amp;amp;idx=1&amp;amp;sn=12d43a2da6b9bbc140386ea9c34a24ef&amp;amp;chksm=8bb27ce0bcc5f5f6fc49a12c7a49e4e62be7daae1b3264e999404d7e5b7e169d3517682b10e4&amp;amp;mpshare=1&amp;amp;scene=2&amp;amp;srcid=1108CyI6BqpWc1g7Zy54Q1EB&amp;amp;key=cde9f53f8128acbda646f6570b118a6148427df939b41baaf7541ff0194cfec036eca77a2648dba43be7c1a5fc069714&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=RORT6loaK1Xc4EjCOnHYqUceRy%2B%2BlElIjia0Fib85PVuxJJHTMhLibyFBjQh1eZP&quot;&gt;2016美国大选：一场没有赢家的闹剧&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NjMxNzgyMw==&amp;amp;mid=2653435388&amp;amp;idx=3&amp;amp;sn=488a71d37b752805280efadbd8972731&amp;amp;chksm=bd378aec8a4003fab65ecfdbcdc24fb17bf0b3dac4343ecfc5afd1b49c36860184caf4126d66&amp;amp;mpshare=1&amp;amp;scene=24&amp;amp;srcid=11096hitz6125QsGqyrU4P52&amp;amp;key=cde9f53f8128acbd33694411c38620a13df771d355888d655cb0473d24ad3747c8dbaaf8f6aec7701fe1d91016bb1a29&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=RORT6loaK1Xc4EjCOnHYqUceRy%2B%2BlElIjia0Fib85PVuxJJHTMhLibyFBjQh1eZP&quot;&gt;美国大选要点须知及对市场影响简评&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://baike.baidu.com/view/1408004.htm&quot;&gt;美国总统选举制度&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIyMTA4ODYyNA==&amp;amp;mid=2649715482&amp;amp;idx=1&amp;amp;sn=d0478c4e56b50ee9bfd1937fcd166081&amp;amp;chksm=8fd9cd05b8ae4413a1aa0bf6d9097a7948de0325135827c8e961b0b80c320937b23e067914bc&amp;amp;mpshare=1&amp;amp;scene=2&amp;amp;srcid=1106mly9lHyuMJ6bO1i1KMgI&amp;amp;key=cde9f53f8128acbdf3d894562ee4fe0880d20a102a83885bf1e7294fa629678b6b76b5f00d00f75761bba162eecc4447&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=RORT6loaK1Xc4EjCOnHYqUceRy%2B%2BlElIjia0Fib85PVuxJJHTMhLibyFBjQh1eZP&quot;&gt;创业公司如何选大将？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4NTE1MDEwNQ==&amp;amp;mid=2670933077&amp;amp;idx=3&amp;amp;sn=be565ce308f378989c94636d266dd1bf&amp;amp;chksm=851bc4a3b26c4db5f3ded8a813917a8088ef6e4bad551c469d5822de3c1ab5f883c68be6e5d5&amp;amp;scene=0&amp;amp;key=cde9f53f8128acbdc93e02c39973ec8a03709ba9d4a9b14ff416552e07876255194bb86f2e8f4b8005a16e3fe9a17761&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=RORT6loaK1Xc4EjCOnHYqUceRy%2B%2BlElIjia0Fib85PVuxJJHTMhLibyFBjQh1eZP&quot;&gt;中国量化对冲策略及产品的全解读&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=2650994876&amp;amp;idx=1&amp;amp;sn=17b2575797089374b64d5ebe10107ff8&amp;amp;chksm=bdbf00ef8ac889f9c4eb10a28babdd97ac0127cb2fa034b7574c804610ad94f6e8db208d7c21&amp;amp;mpshare=1&amp;amp;scene=2&amp;amp;srcid=1123UbXpWwwT74CzhkH1vuQQ&amp;amp;key=9ed31d4918c154c8d05e34f6e450b1cfbf8a88cb97c4a8211690dc6c43cc95ca25441d0156984bd13944f23ad5339160&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=bCi8Vd6N3xy1rQ3QvUJZ%2FhFC39d4n2lnpUnSPAKHQoiJFIscVimSdhmQiGdBRmMg&quot;&gt;Hadoop、Spark等5种大数据框架对比，你的项目该用哪种？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.jobbole.com/88301/&quot;&gt;学习笔记：The Log（我所读过的最好的一篇分布式技术文章）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying&quot;&gt;The Log: What every software engineer should know about real-time data’s unifying abstraction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4NDAxODg4OA==&amp;amp;mid=2651081540&amp;amp;idx=2&amp;amp;sn=7b9a93d2e88e999b5d293d88346011b5&amp;amp;chksm=841d78e3b36af1f569a53c85215c58b354cfa9534d1be66928262b46a6918fde5d80f87e8061&amp;amp;mpshare=1&amp;amp;scene=2&amp;amp;srcid=1120g9rq2Yy4WIqIBVtshcph&amp;amp;key=9ed31d4918c154c89f8f3387a3f995fa6830b43640657bee99ff431268cfea4cb773f8781b361e5de894dadd1773a1c3&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=bCi8Vd6N3xy1rQ3QvUJZ%2FhFC39d4n2lnpUnSPAKHQoiJFIscVimSdhmQiGdBRmMg&quot;&gt;18岁的希拉里，清纯的本拉登，跑龙套的成龙….这是朋友圈里最珍贵的照片！&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MDI3MjA5MQ==&amp;amp;mid=2697265591&amp;amp;idx=1&amp;amp;sn=48cd5869b3b1bbcfa9e22b77016e355d&amp;amp;chksm=8376fe83b401779588f1837371c0d85307a1e998f357292fa3a8ce89be402060c2fdbe53bc66&amp;amp;mpshare=1&amp;amp;scene=2&amp;amp;srcid=1115NMJMrArj8mMveoifQjqA&amp;amp;key=9ed31d4918c154c894345cb930ce69ce1ffd239c54f37bca2a9c3eb84e998cfe4c88940dc3a9394d968bdaa90f131305&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=bCi8Vd6N3xy1rQ3QvUJZ%2FhFC39d4n2lnpUnSPAKHQoiJFIscVimSdhmQiGdBRmMg&quot;&gt;干货 Tomcat类加载机制触发的Too many open files问题分析&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/pulse/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%B8%8D%E9%80%89%E9%98%BF%E9%87%8C%E4%BA%91%E4%B8%80-tony-qu-%E7%9E%BF%E6%9D%B0&quot;&gt;为什么我不选阿里云&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjAzNzMzNTkyMQ==&amp;amp;mid=2653749588&amp;amp;idx=1&amp;amp;sn=79ad8e0c2b5c1cc2589f4129b2bc3a72&amp;amp;mpshare=1&amp;amp;scene=2&amp;amp;srcid=0601zOCo3bZcUqls5mBR6pKb&amp;amp;key=9ed31d4918c154c85f757691915e1fcab822a9b6b9b563d18b44215d2f68316b69d13bafc1c15bb0a181f2fd1f4b1d0d61c226f712f447335804b2aa685f7d382bb4cc217bf35efdc32ccf80386b5ee1&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=bXG1GuJH%2BKx%2BzbE5O8r1mz3TVQ1IN2GwY6aPL%2Fj1j9uSquqW2pdBpLukNMb7qXpo&quot;&gt;从价值1300亿美元到40亿都没人要，这桩互联网惊天惨案是怎么诞生的？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;居安思危啊。有时候你的成功，并不是因为你自己才成功的，也许是运气刚好而已吧。最近很流行一句话 “离开了公司，大多数人什么都不是”，共勉。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4NTIyMjgwNw==&amp;amp;mid=2650654204&amp;amp;idx=1&amp;amp;sn=5ba0dca6ba06514fc70dc49cf728c393&amp;amp;chksm=87d25104b0a5d812b88f56016b70e9d0899bfb48d9bf18fd5d7ccb9c22e070ca9e01e712e6f1&amp;amp;scene=0&amp;amp;key=9ed31d4918c154c8b561fd4c209a1c38d82df894f5253bd0c3bfadf950d2f912faa7a21f3fc28a958e1469418874432871b81812ec703b8444ac15e1d3e82a5a40f967c797fa7ea2221c2c1923cf0266&amp;amp;ascene=0&amp;amp;uin=MTAzNTc2NzM4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.12+build(16A323)&amp;amp;version=11020201&amp;amp;pass_ticket=bXG1GuJH%2BKx%2BzbE5O8r1mz3TVQ1IN2GwY6aPL%2Fj1j9uSquqW2pdBpLukNMb7qXpo&quot;&gt;大盘上涨趋势已经确立&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;留富兵法周报挺不错的，尝试自己实现到策略里看看。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;4-优质产品&quot;&gt;4. 优质产品&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://coggle.it/&quot;&gt;https://coggle.it/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;优质在线思维导图。&lt;/p&gt;

&lt;h2 id=&quot;5-读书总结系列&quot;&gt;5. 读书总结系列&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;../books-recommend-and-summarize-on-mar-2016&quot;&gt;『 读书笔记 』3月读书总结和推荐&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;../books-recommend-and-summarize-on-apr-2016&quot;&gt;『 读书笔记 』4月读书总结｜博文推荐&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;../books-recommend-and-summarize-on-May-2016&quot;&gt;『 读书笔记 』5月读书总结｜博文推荐&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;../books-recommend-and-summarize-on-June-2016&quot;&gt;『 读书笔记 』6月读书总结｜博文推荐&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;../books-recommend-and-summarize-on-july-2016&quot;&gt;『 读书笔记 』坚持读书 6 个多月的感受&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;../books-recommend-and-summarize-on-sep-2016&quot;&gt;『 读书笔记 』9月，10月读书总结｜博文推荐&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
   <entry>
     <title>Best Python Problems on Stackoverflow</title>
     <link href="/python-stackoverflow-question"/>
     <updated>2016-11-11T00:00:00+08:00</updated>
     <id>/python-stackoverflow-question</id>
     <content type="html">&lt;h2 id=&quot;python-stackoverflow-经典问题&quot;&gt;Python Stackoverflow 经典问题&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do&quot;&gt;What does the “yield” keyword do?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python&quot;&gt;What is a metaclass in Python?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/82831/how-do-i-check-whether-a-file-exists-using-python&quot;&gt;How do I check whether a file exists using Python?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/394809/does-python-have-a-ternary-conditional-operator&quot;&gt;Does Python have a ternary conditional operator?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/89228/calling-an-external-command-in-python&quot;&gt;Calling an external command in Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/419163/what-does-if-name-main-do&quot;&gt;What does &lt;code class=&quot;highlighter-rouge&quot;&gt;if __name__ == “__main__”:&lt;/code&gt; do?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/739654/how-to-make-a-chain-of-function-decorators-in-python&quot;&gt;How to make a chain of function decorators in Python?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/613183/sort-a-python-dictionary-by-value&quot;&gt;Sort a Python dictionary by value&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/273192/how-to-check-if-a-directory-exists-and-create-it-if-necessary&quot;&gt;How to check if a directory exists and create it if necessary?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/136097/what-is-the-difference-between-staticmethod-and-classmethod-in-python&quot;&gt;What is the difference between @staticmethod and @classmethod in Python?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference&quot;&gt;How do I pass a variable by reference?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/101268/hidden-features-of-python&quot;&gt;Hidden features of Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/1436703/difference-between-str-and-repr-in-python&quot;&gt;Difference between &lt;strong&gt;str&lt;/strong&gt; and &lt;strong&gt;repr&lt;/strong&gt; in Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/509211/explain-pythons-slice-notation&quot;&gt;Explain Python’s slice notation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/576169/understanding-python-super-with-init-methods&quot;&gt;Understanding Python super() with &lt;strong&gt;init&lt;/strong&gt;() methods&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/123198/how-do-i-copy-a-file-in-python&quot;&gt;How do I copy a file in python?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/36901/what-does-double-star-and-star-do-for-parameters&quot;&gt;What does ** (double star) and * (star) do for parameters?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/30081275/why-is-1000000000000000-in-range1000000000000001-so-fast-in-python-3&quot;&gt;Why is “1000000000000000 in range(1000000000000001)” so fast in Python 3?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/3061/calling-a-function-of-a-module-from-a-string-with-the-functions-name-in-python&quot;&gt;Calling a function of a module from a string with the function’s name in Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/931092/reverse-a-string-in-python&quot;&gt;Reverse a string in Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/582336/how-can-you-profile-a-python-script&quot;&gt;How can you profile a Python script?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
   </entry>
   
   <entry>
     <title>『 Spark 』13. Spark 2.0 Release Notes 中文版</title>
     <link href="/spark-2.0-release-notes-zh"/>
     <updated>2016-09-13T00:00:00+08:00</updated>
     <id>/spark-2.0-release-notes-zh</id>
     <content type="html">&lt;h2 id=&quot;写在前面&quot;&gt;写在前面&lt;/h2&gt;

&lt;p&gt;本系列是综合了自己在学习spark过程中的理解记录 ＋ 对参考文章中的一些理解 ＋ 个人实践spark过程中的一些心得而来。写这样一个系列仅仅是为了梳理个人学习spark的笔记记录，所以一切以能够理解为主，没有必要的细节就不会记录了，而且文中有时候会出现英文原版文档，只要不影响理解，都不翻译了。若想深入了解，最好阅读参考文章和官方文档。&lt;/p&gt;

&lt;p&gt;其次，本系列是基于目前最新的 spark 1.6.0 系列开始的，spark 目前的更新速度很快，记录一下版本号还是必要的。 &lt;br /&gt;
最后，如果各位觉得内容有误，欢迎留言备注，所有留言 24 小时内必定回复，非常感谢。&lt;/p&gt;

&lt;p&gt;Tips: 如果插图看起来不明显，可以：1. 放大网页；2. 新标签中打开图片，查看原图哦；3. 点击右边目录上方的 &lt;em&gt;present mode&lt;/em&gt; 哦。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Notes&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;本篇开始，会渐渐的把版本升级到 2.0 上，后续的文章也会逐渐基于 2.0 来写；前面的文章就不改了，反正都是换汤不换药;&lt;/li&gt;
  &lt;li&gt;本篇是上一篇文章的升级版，关于 spark 2.0 的大概介绍可以直接看上一篇文章，本篇文章是因为最近项目准备从 1.6.1 升级到 2.0，需要对 2.0 有一个整体的了解，所以索性读一遍 2.0 的 release notes，也随手把 release notes 的中文版写下来咯;&lt;/li&gt;
  &lt;li&gt;虽说是中文版，但是一切都是以能理解为主，有的地方不知道怎么翻译，或者我觉得没有必要翻译的，就没有写成中文了，当然欢迎大家提出修改建议了～&lt;/li&gt;
  &lt;li&gt;如果要急着陪女票的话，推荐直接看最后的 &lt;em&gt;7. Spark 2.0, 必须知道的几个点&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上一篇文章： 
&lt;a href=&quot;http://litaotao.github.io/spark-2.0-faster-easier-smarter&quot;&gt;『 Spark 』12. Spark 2.0  | 10 个特性介绍&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-api-stability&quot;&gt;1. API Stability&lt;/h2&gt;

&lt;p&gt;spark 保证 2.x 中非实验性的 api 的稳定性，2.x 中大部分 api 都与 1.x 中保持一致，但是删除了一些 api，更新了一些 api，并且有部分 api 打算在后续升级中移除，具体见下面，完整的列表参考：&lt;a href=&quot;https://issues.apache.org/jira/browse/SPARK-11806&quot;&gt;Spark 2.0 deprecations and removals&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;11-removals-api&quot;&gt;1.1 Removals API&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Bagel&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;不支持 Hadoop 2.1 及之前老版本&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;The ability to configure closure serializer [闭包序列化？]&lt;/li&gt;
  &lt;li&gt;HTTPBroadcast&lt;/li&gt;
  &lt;li&gt;TTL-based metadata cleaning&lt;/li&gt;
  &lt;li&gt;删除 org.apache.spark.Logging，推荐直接食用 slf4j 包&lt;/li&gt;
  &lt;li&gt;SparkContext.metricsSystem&lt;/li&gt;
  &lt;li&gt;Block-oriented integration with Tachyon (subsumed by file system integration)&lt;/li&gt;
  &lt;li&gt;删掉在 1.x 中标注为 deprecated 的 api&lt;/li&gt;
  &lt;li&gt;Methods on Python DataFrame that returned RDDs (map, flatMap, mapPartitions, etc). They are still available in dataframe.rdd field, e.g. dataframe.rdd.map.&lt;/li&gt;
  &lt;li&gt;Less frequently used streaming connectors, including Twitter, Akka, MQTT, ZeroMQ [不知道为啥要删掉这些 api，估计是因为 structure streaming 改动比较大，难以实现这些 connector 吧]&lt;/li&gt;
  &lt;li&gt;Hash-based shuffle manager&lt;/li&gt;
  &lt;li&gt;History serving functionality from standalone Master&lt;/li&gt;
  &lt;li&gt;For Java and Scala, DataFrame no longer exists as a class. As a result, data sources would need to be updated.&lt;/li&gt;
  &lt;li&gt;Spark EC2 script 被迁移到另外一个 repo，本身与 spark 框架无关&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;12-behavior-changes-api&quot;&gt;1.2 Behavior Changes API&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;默认使用 scala 2.11 编译，之前默认是 2.10&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;sparksql 中，float 数据类型被解析成 decimal 类型，之前是被解析成 double 类型&lt;/li&gt;
  &lt;li&gt;Kryo 升级到 3.0&lt;/li&gt;
  &lt;li&gt;java 中，RDD.flatMap 和 RDD.mapPartitions 中的函数不需要返回所有数据，只需要能返回一个迭代器即可&lt;/li&gt;
  &lt;li&gt;Java RDD’s countByKey and countAprroxDistinctByKey now returns a map from K to java.lang.Long, rather than to java.lang.Object.&lt;/li&gt;
  &lt;li&gt;When writing Parquet files, the summary files are not written by default. To re-enable it, users must set “parquet.enable.summary-metadata” to true.&lt;/li&gt;
  &lt;li&gt;The DataFrame-based API (spark.ml) now depends upon local linear algebra in spark.ml.linalg, rather than in spark.mllib.linalg.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;13-deprecations&quot;&gt;1.3 Deprecations&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Mesos 中的 Fine-grained 模式&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;不支持 Java 7&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;不支持 Support for Python 2.6&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-core-and-spark-sql&quot;&gt;2. Core and Spark SQL&lt;/h2&gt;

&lt;h3 id=&quot;21-programming-apis&quot;&gt;2.1 Programming APIs&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;统一 DataFrame 和 Dataset，在 Scala 和 Java 中, DataFrame 和 Dataset 完成合并；在 Python 和 R 中, DataFrame 和 Dataset 没有合并；&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;SparkSession: 新的spark 程序入口，SQLContext 和 HiveContext 仍然可用；&lt;/li&gt;
  &lt;li&gt;新的 streaming 配置；&lt;/li&gt;
  &lt;li&gt;新的 accumulator API；&lt;/li&gt;
  &lt;li&gt;A new, improved Aggregator API for typed aggregation in Datasets&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;22-sql&quot;&gt;2.2 SQL&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Spark 2.0 完全支持 SQL2003 标准.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;更原生带 sql 解析器；&lt;/li&gt;
  &lt;li&gt;Native DDL command implementations&lt;/li&gt;
  &lt;li&gt;支持子查询，包括：
    &lt;ul&gt;
      &lt;li&gt;Uncorrelated Scalar Subqueries&lt;/li&gt;
      &lt;li&gt;Correlated Scalar Subqueries&lt;/li&gt;
      &lt;li&gt;NOT IN predicate Subqueries (in WHERE/HAVING clauses)&lt;/li&gt;
      &lt;li&gt;IN predicate subqueries (in WHERE/HAVING clauses)&lt;/li&gt;
      &lt;li&gt;(NOT) EXISTS predicate subqueries (in WHERE/HAVING clauses)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;View canonicalization support&lt;/li&gt;
  &lt;li&gt;In addition, when building without Hive support, Spark SQL should have almost all the functionality as when building with Hive support, with the exception of Hive connectivity, Hive UDFs, and script transforms.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;23-new-features&quot;&gt;2.3 New Features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;原生支持 CSV 数据源, 基于 Databricks 的 spark-csv 包；&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;cache 和运行时的堆外内存管理&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Hive style bucketing support&lt;/li&gt;
  &lt;li&gt;Approximate summary statistics using sketches, including approximate quantile, Bloom filter, and count-min sketch.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;24-performance-and-runtime&quot;&gt;2.4 Performance and Runtime&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;2～10 倍的性能提升，得益于 whole stage code generation 方案；&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;改善 Parquet 文件的扫描性能&lt;/li&gt;
  &lt;li&gt;改善 ORC performance&lt;/li&gt;
  &lt;li&gt;改善 Catalyst query 优化器&lt;/li&gt;
  &lt;li&gt;改善 window function&lt;/li&gt;
  &lt;li&gt;Automatic file coalescing for native data sources&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-mllib&quot;&gt;3. MLlib&lt;/h2&gt;

&lt;p&gt;在 2.x 中，DataFrame-based API 会是主要开发，维护的新的 mllib api。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ML persistence: The DataFrames-based API provides near-complete support for saving and loading ML models and Pipelines in Scala, Java, Python, and R. See &lt;a href=&quot;https://databricks.com/blog/2016/05/31/apache-spark-2-0-preview-machine-learning-model-persistence.html&quot;&gt;this blog&lt;/a&gt; post and the following JIRAs for details: SPARK-6725, SPARK-11939, SPARK-14311.&lt;/li&gt;
  &lt;li&gt;MLlib in R: SparkR now offers MLlib APIs for generalized linear models, naive Bayes, k-means clustering, and survival regression.&lt;/li&gt;
  &lt;li&gt;Python: PySpark now offers many more MLlib algorithms, including LDA, Gaussian Mixture Model, Generalized Linear Regression, and more.&lt;/li&gt;
  &lt;li&gt;Algorithms added to DataFrames-based API: Bisecting K-Means clustering, Gaussian Mixture Model, MaxAbsScaler feature transformer.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-sparkr&quot;&gt;4. SparkR&lt;/h2&gt;

&lt;p&gt;最大的改善是 2.x 中，sparkr 支持3个 udf: dapply, gapply, and lapply.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improved algorithm coverage for machine learning in R, including naive Bayes, k-means clustering, and survival regression.&lt;/li&gt;
  &lt;li&gt;Generalized linear models support more families and link functions.&lt;/li&gt;
  &lt;li&gt;Save and load for all ML models.&lt;/li&gt;
  &lt;li&gt;More DataFrame functionality: Window functions API, reader, writer support for JDBC, CSV, SparkSession&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;5-streaming&quot;&gt;5. Streaming&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;新的 streaming 框架 Structured Streaming, 其中 DStream API 大多数都是处于试验阶段，并且只支持 Kafka 0.10 的connector.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-dependency-packaging-and-operations&quot;&gt;6. Dependency, Packaging, and Operations&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Spark 2.0 no longer requires a fat assembly jar for production deployment.&lt;/li&gt;
  &lt;li&gt;Akka dependency has been removed, and as a result, user applications can program against any versions of Akka.&lt;/li&gt;
  &lt;li&gt;Support launching multiple Mesos executors in coarse grained Mesos mode.&lt;/li&gt;
  &lt;li&gt;Kryo version is bumped to 3.0.&lt;/li&gt;
  &lt;li&gt;The default build is now using Scala 2.11 rather than Scala 2.10.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;7-spark-20-必须知道的几个点&quot;&gt;7. Spark 2.0, 必须知道的几个点&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;不支持 Hadoop 2.1 及之前老版本&lt;/li&gt;
  &lt;li&gt;默认使用 scala 2.11 编译，之前默认是 2.10&lt;/li&gt;
  &lt;li&gt;Mesos 中的 Fine-grained 模式 [Deprecations]&lt;/li&gt;
  &lt;li&gt;不支持 Java 7 [Deprecations]&lt;/li&gt;
  &lt;li&gt;不支持 Support for Python 2.6 [Deprecations]&lt;/li&gt;
  &lt;li&gt;Spark 2.0 完全支持 SQL2003 标准&lt;/li&gt;
  &lt;li&gt;原生支持 CSV 数据源, 基于 Databricks 的 spark-csv 包；&lt;/li&gt;
  &lt;li&gt;SparkSession: 新的spark 程序入口，SQLContext 和 HiveContext 仍然可用；&lt;/li&gt;
  &lt;li&gt;sql中 2～10 倍的性能提升，得益于 whole stage code generation 方案；&lt;/li&gt;
  &lt;li&gt;统一 DataFrame 和 Dataset，在 Scala 和 Java 中, DataFrame 和 Dataset 完成合并；在 Python 和 R 中, DataFrame 和 Dataset 没有合并；&lt;/li&gt;
  &lt;li&gt;cache 和运行时的堆外内存管理&lt;/li&gt;
  &lt;li&gt;新的 streaming 框架 Structured Streaming, 其中 DStream API 大多数都是处于试验阶段，并且只支持 Kafka 0.10 的connector.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;14-打开微信扫一扫点一点棒棒的_&quot;&gt;14. 打开微信，扫一扫，点一点，棒棒的，^_^&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;../images/wechat_pay_6-6.png&quot; alt=&quot;wechat_pay_6-6.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考文章&quot;&gt;参考文章&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://spark.apache.org/releases/spark-release-2-0-0.html&quot;&gt;Spark Release 2.0.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/SPARK-11806&quot;&gt;Spark 2.0 deprecations and removals&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://spark-summit.org/2016/events/apache-spark-mllib-20-preview-data-science-and-production/&quot;&gt;APACHE SPARK MLLIB 2.0 PREVIEW: DATA SCIENCE AND PRODUCTION&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;本系列文章链接&quot;&gt;本系列文章链接&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/introduction-to-spark?s=inner&quot;&gt;『 Spark 』1. spark 简介 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-questions-concepts?s=inner&quot;&gt;『 Spark 』2. spark 基本概念解析 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-programming-model?s=inner&quot;&gt;『 Spark 』3. spark 编程模式 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-what-is-rdd?s=inner&quot;&gt;『 Spark 』4. spark 之 RDD &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-resouces-blogs-paper?s=inner&quot;&gt;『 Spark 』5. 这些年，你不能错过的 spark 学习资源 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/deep-into-spark-exection-model?s=inner&quot;&gt;『 Spark 』6. 深入研究 spark 运行原理之 job, stage, task&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-dataframe-introduction?s=inner&quot;&gt;『 Spark 』7. 使用 Spark DataFrame 进行大数据分析&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-in-finance-and-investing?s=inner&quot;&gt;『 Spark 』8. 实战案例 ｜ Spark 在金融领域的应用 ｜ 日内走势预测&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/ipython-notebook-spark?s=inner&quot;&gt;『 Spark 』9. 搭建 IPython + Notebook + Spark 开发环境&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/boost-spark-application-performance?s=inner&quot;&gt;『 Spark 』10. spark 应用程序性能优化｜12 个优化方法&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-mlib-machine-learning?s=inner&quot;&gt;『 Spark 』11. spark 机器学习&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-2.0-faster-easier-smarter?s=inner&quot;&gt;『 Spark 』12. Spark 2.0 特性介绍&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-2.0-release-notes-zh?s=inner&quot;&gt;『 Spark 』13. Spark 2.0 Release Notes 中文版 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://litaotao.github.io/spark-sql-parquet-optimize?s=inner&quot;&gt;『 Spark 』14. 一次 Spark SQL 性能优化之旅&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   

</feed>



  <script type="text/javascript">
    var cnzz_protocol = (("https:" == document.location.protocol) ? " https://" : " http://");
    document.write(unescape("%3Cspan id='cnzz_stat_icon_1258855744'%3E%3C/span%3E%3Cscript src='" + cnzz_protocol + "s11.cnzz.com/z_stat.php%3Fid%3D1258855744' type='text/javascript'%3E%3C/script%3E"));
  </script>

</body>
</html>
