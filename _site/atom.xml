<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>云在青天水在瓶</title>
  <meta name="baidu-site-verification" content="6b2f48c1baf35f9e0eb29b4455265203"/>
  <meta name="baidu-site-verification" content="hgXDOPtWLn" />
  <meta name="google-site-verification" content="YqjJD80rZQfugWoznvslaHlII_viwiMiUDEEgPTLEDw" />
  <meta name="renderer" content="webkit">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="mobile-web-app-capable" content="yes">
  <link rel="stylesheet" href="/css/font-awesome/css/font-awesome.min.css" type="text/css" />
  <script src="/files/dc3da690b0d2a5655a8d6150862a2a07.html"></script>
  <!-- <link rel="stylesheet" href="/css/pygments.css" type="text/css" /> -->
  <link rel="stylesheet" href="/css/default-min.css" type="text/css" />
  <link rel="stylesheet" href="/css/desktop-min.css" type="text/css" />
  <link rel="stylesheet" href="/css/mobile-min.css" type="text/css" />
  <link rel="shortcut icon" href="/css/favicon.ico" type="image/x-icon" />
  <link rel="icon" href="/css/favicon.ico" mce_href="/favicon.ico" type="image/x-icon">
  <link rel="alternate" type="application/atom+xml" title="Recent Entries" href="/atom.xml" />
  <script src="/js/jquery-1.11.0.min.js" type="text/javascript"></script>
  <script src="/js/jquery-migrate-1.2.1.min.js" type="text/javascript"></script>
  <script src="/js/jquery.transit.min.js" type="text/javascript"></script>
  <script src="/js/common.js" type="text/javascript"></script>
  <script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript"></script>

  
  <!-- growingIO code -->
  <script type='text/javascript'>
      var _vds = _vds || [];
      window._vds = _vds;
      (function(){
        _vds.push(['setAccountId', '9f3f34627219ccd1']);
        (function() {
          var vds = document.createElement('script');
          vds.type='text/javascript';
          vds.async = true;
          vds.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'dn-growing.qbox.me/vds.js';
          var s = document.getElementsByTagName('script')[0];
          s.parentNode.insertBefore(vds, s);
        })();
      })();
  </script>
  
  <!-- 删掉 baidu spider 主动推送，无效 -->
  <!-- baidu spider initiative push -->
<!-- <script>
    (function(){
        var bp = document.createElement('script');
        var curProtocol = window.location.protocol.split(':')[0];
        if (curProtocol === 'https') {
            bp.src = 'https://zz.bdstatic.com/linksubmit/push.js';        
        }
        else {
            bp.src = 'http://push.zhanzhang.baidu.com/push.js';
        }
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(bp, s);
    })();
  </script> -->
  
  <!-- google analytics push code -->
  <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-72176628-2', 'auto');
      ga('send', 'pageview');
  </script>

</head>

<!-- meiqia plug-in -->
<!-- 
<script type='text/javascript'>
    (function(m, ei, q, i, a, j, s) {
        m[a] = m[a] || function() {
            (m[a].a = m[a].a || []).push(arguments)
        };
        j = ei.createElement(q),
            s = ei.getElementsByTagName(q)[0];
        j.async = true;
        j.charset = 'UTF-8';
        j.src = i + '?v=' + new Date().getUTCDate();
        s.parentNode.insertBefore(j, s);
    })(window, document, 'script', '//static.meiqia.com/dist/meiqia.js', '_MEIQIA');
    _MEIQIA('entId', 15857);
</script>
 -->

<body>
  <?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

   <title>云在青天水在瓶</title>
   <link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml"/>
   <link href="http://localhost:4000" rel="alternate" type="text/html" />
   <updated>2018-04-19T02:10:41+08:00</updated>
   <id>http://localhost:4000</id>
   <author>
     <name></name>
     <email></email>
   </author>

   
   <entry>
     <title>深度学习第一弹 —— MNIST for the Newbies</title>
     <link href="/mnist-tutoril-deep-learning-for-the-newbies"/>
     <updated>2017-04-21T00:00:00+08:00</updated>
     <id>/mnist-tutoril-deep-learning-for-the-newbies</id>
     <content type="html">&lt;h2 id=&quot;写在前面&quot;&gt;写在前面&lt;/h2&gt;

&lt;p&gt;最近抽时间看一些 AI 方面的东西，说实话，我一开始对这方面其实不是很重视的，毕竟现在发展还是处于很初级的阶段。但因为本身职业是跟金融有关的，最近看了不少产业相关的资料，也经常研究国家在各个产业链上的政策，以及经常看到不少国内外企业在 AI 方面的布局和成绩，觉得这个方向还是可圈可点的。所以还是准备花些时间掌握一些这方面的底层原理，做到知其然知其所以然。&lt;/p&gt;

&lt;p&gt;不过其实我内心还是挺害怕的，现在科技这么发达，没准儿到我 ～60 来岁的时候，真会出现 《I, Robot》电影中的那些场景。《I, Robot》是 2004 年我最喜欢的演员 威尔斯密斯 主演的一部讲机器人觉醒的科幻片，如今过去13年，想想这些导演的在当时的思维其实还是很具有前瞻性的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://litaotao.github.io/images/robot_1.jpg&quot; alt=&quot;robot_1.jpg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-ai-深度学习神经网络机器学习&quot;&gt;1. AI, 深度学习，神经网络，机器学习&lt;/h2&gt;

&lt;p&gt;现在整个行业上其实还是略显浮躁的，搞过线性回归的人说自己懂机器学习，搞过机器学习的说自己研究神经网络，搞过神经网络的说自己做深度学习，搞深度学习的直接说自己是 AI 专家了。&lt;/p&gt;

&lt;p&gt;不过话也说来，其实 &lt;code class=&quot;highlighter-rouge&quot;&gt;AI, 深度学习，神经网络，机器学习&lt;/code&gt; 这四个方面目前也没有非常明晰的分类标准，或者说，也许在不久的某一天，都不存在这样的分类了，也许到时候直接说成 &lt;code class=&quot;highlighter-rouge&quot;&gt;AI 的不同等级&lt;/code&gt; 吧。&lt;/p&gt;

&lt;p&gt;所以在表述这个问题上，我更倾向于交流做过的模型，研究过的模型。&lt;/p&gt;

&lt;h2 id=&quot;2-所以-mnist-是个啥&quot;&gt;2. 所以 MNIST 是个啥&lt;/h2&gt;

&lt;p&gt;在很多书，在线培训网站上，基本上涉及到神经网络，深度学习，AI 的内容，都是以 MNIST 例子来开讲的，同时很多讲这些主题的 blog，也几乎没有哪篇没有谈到 MNIST。不过话说，我估计应该没多少人知道 MNIST 是啥的缩写吧，这也是我很强调知其然知其所以然的原因，对新知识，新事物的学习过程，不应该是被饲养般的全吞下去，应该细细咀嚼，慢慢品尝其中的韵味。&lt;/p&gt;

&lt;p&gt;所以既然提到 AI，大家都先以 MNIST 作为入门例子，就连大 google 开放的 tensorflow 也是以 MNIST 作为开篇例子的，那 MNIST 究竟是个啥呢？&lt;/p&gt;

&lt;p&gt;MNIST 是 Mixed National Institute of Standards and Technology database 的简称，从英文原意上还挺难知道到底是干嘛的，不过从官方网站上最终还是找到了它的具体含义 &lt;a href=&quot;http://yann.lecun.com/exdb/mnist/&quot;&gt;http://yann.lecun.com/exdb/mnist/&lt;/a&gt;，MNIST 是一个数据库，这个数据库中存储了各个国家地区，不同标准的手写数字，并且是存储的内容都是结果标准化处理了的，专门用于关于手写体识别方面的技术应用。&lt;/p&gt;

&lt;h2 id=&quot;3-mnist-数据结构啥样子呢&quot;&gt;3. MNIST 数据结构啥样子呢&lt;/h2&gt;

&lt;p&gt;介绍 MNIST 的原理之前，我们先来看看它的数据结构是个啥样吧。这里我们直接复用 tensorflow 官方的代码，链接在这儿：&lt;a href=&quot;https://www.tensorflow.org/get_started/mnist/beginners&quot;&gt;MNIST For ML Beginners&lt;/a&gt;。或者也可以直接看我的 github 上的代码：&lt;a href=&quot;https://github.com/litaotao/tensorflow_guide/blob/master/Official%20Document%20-%20Section%201%20:%20get%20started/MNIST%20For%20ML%20Beginners.ipynb&quot;&gt;https://github.com/litaotao/tensorflow_guide/blob/master/Official%20Document%20-%20Section%201%20:%20get%20started/MNIST%20For%20ML%20Beginners.ipynb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;数据结构可以直接看下面的截图，我们分两部分来说：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.image&lt;/code&gt;: 是一个 ndarray，里面每一个元素是用来训练的图片数据&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.image[index]&lt;/code&gt;: 是一个大小为 (784, ) 的 ndarray，里面每一个元素代表这个图片【标准化为 28*28 大小的正方形】在每个像素框中的像素值【或者是灰度值】&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.labels&lt;/code&gt;: 是一个 ndarray，里面的每一个元素指 mnist.train.image 中根据下标对应的图片真实代表值&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.labels[index]&lt;/code&gt;: 是一个大小为 (10, ) 的 ndarray，里面每一个元素只有 0，1 两种取值，代表了 mnist.train.image[index] 这个图片对应的真实值&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://litaotao.github.io/images/robot_2_mnist.jpg&quot; alt=&quot;robot_2_mnist.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;举个例子，如上图所示：&lt;/p&gt;

&lt;p&gt;我们看下 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.images[0]&lt;/code&gt; 的具体内容，其代表一张标准化为 (28, 28) 的手写数字图片在每一个像素上的值，然后 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.labels[0]&lt;/code&gt;的值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]&lt;/code&gt;，其中第 1 个元素【下标为 1，序号从 0 开始哦】为 1，其他皆为 0，代表 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.images[0]&lt;/code&gt; 这张图片代表的真实值是 1。如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.labels[0]&lt;/code&gt; 的值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;[ 0.,  0.,  0.,  0.,  0.,  5.,  0.,  0.,  0.,  0.]&lt;/code&gt;，其中第 5 个元素【下标为 5，序号从 0 开始哦】为 1，其他皆为 0，则说明 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.images[0]&lt;/code&gt; 这张图片代表的真实值是 1。&lt;/p&gt;

&lt;p&gt;当然为了验证，可以把 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnist.train.images[0]&lt;/code&gt; 这张图画出来看看：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://litaotao.github.io/images/robot_3_mnist_pixel.jpg&quot; alt=&quot;robot_3_mnist_pixel.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;看到这里，再理解下面这两张图应该就比较轻松了吧：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://litaotao.github.io/images/robot_3_mnist-train-xs.png&quot; alt=&quot;robot_3_mnist-train-xs.png&quot; /&gt;
&lt;img src=&quot;http://litaotao.github.io/images/robot_4_mnist-train-ys.png&quot; alt=&quot;robot_4_mnist-train-ys.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-那么-softmax-又是个什么鬼&quot;&gt;4. 那么 softmax 又是个什么鬼&lt;/h2&gt;

&lt;p&gt;关于 softmax 其实我一开始也挺纳闷的，特别是看到一堆公式后，不过现在回顾来看，其实初学时也不必过于深究。现在可以先知道它和一般的回归有啥区别，以及它存在的意义及用途，之后再慢慢琢磨那些公式也可。因为有些东西，只有用起来才能理解其中的含义。&lt;/p&gt;

&lt;p&gt;我们常见的回归一般都是这种形式： &lt;code class=&quot;highlighter-rouge&quot;&gt;y = A * X + b&lt;/code&gt;，即给定一个 x 序列，输出一个特定的值。而 softmax 是指给定一个 x 序列，输出该序列符合某个结果的概率或者置信度。比如说，现在我们 x 是一个 28 * 28 = 784 长的一个 list，代表一张手写数字的像素序列，经过 softmax 回归后，可以得到这个像素序列分别属于 0 ～ 9 中，每个数字的概率。&lt;/p&gt;

&lt;h2 id=&quot;5-所以是时候揭开这个公式的神秘面纱了&quot;&gt;5. 所以，是时候揭开这个公式的神秘面纱了&lt;/h2&gt;

&lt;p&gt;在 tensorflow 的 &lt;a href=&quot;https://www.tensorflow.org/get_started/mnist/beginners&quot;&gt;MNIST For ML Beginners&lt;/a&gt; 中，最后的模型是这样的：&lt;code class=&quot;highlighter-rouge&quot;&gt;y = tf.nn.softmax(tf.matmul(x, W) + b)&lt;/code&gt;，其中核心部分就是理解 &lt;code class=&quot;highlighter-rouge&quot;&gt;tf.matmul(x, W) + b&lt;/code&gt; 这个内部模型的含义，以及该模型输出的结果，为了方便，我把矩阵 x, W 画出来供大家理解一下。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;内部模型：&lt;code class=&quot;highlighter-rouge&quot;&gt;y = tf.matmul(x, W) + b&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;y: 结果矩阵
&lt;img src=&quot;http://litaotao.github.io/images/robot_8_mnist_equation.png&quot; alt=&quot;robot_8_mnist_equation.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;x: 训练样本矩阵&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://litaotao.github.io/images/robot_6_mnist_pixel.png&quot; alt=&quot;robot_6_mnist_pixel.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;W: 权重矩阵，大小 768 x 10，相当于 10 个列向量，每个列向量代表对结果 0 ~ 9 的权重
&lt;img src=&quot;http://litaotao.github.io/images/robot_5_mnist_pixel.png&quot; alt=&quot;robot_5_mnist_pixel.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;b: bias 向量，代码中只是一个行向量，但在实际相加的时候，需要两个向量的shape 一样，tensorflow 中会自动根据矩阵结构来进行扩展，所以最后进行计算的时候实际上 b 是一个 n x 10 的矩阵，但是每一个行向量都是相同的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://litaotao.github.io/images/robot_10_mnist_pixel.png&quot; alt=&quot;robot_10_mnist_pixel.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;所以最后的公式其实是酱紫的
&lt;img src=&quot;http://litaotao.github.io/images/robot_9_mnist_equation.png&quot; alt=&quot;robot_9_mnist_equation.png&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;6-到这里了还该做些啥&quot;&gt;6. 到这里了，还该做些啥&lt;/h2&gt;

&lt;p&gt;到这里了，关于 MNIST 的话题算是差不多了，不过这部分其实还是有很多细节可以继续深究，优化的，特别是针对专门做这方面的研究的人来说。接下来的话，可以考虑考虑实现几个例子，然后继续学习后面的内容。就跟游戏打怪一样，一般一个游戏的主线只占了整个游戏情节的 70% 左右，如果一开始就要把所有 npc 搞一遍，把所有支线都通关，那进度肯定会慢很多了；所以我都喜欢先把主线走完，中途当然也可以偶尔过过支线内容，然后最后再返回来做支线任务，会有不同的感受的。&lt;/p&gt;

&lt;h2 id=&quot;7-最后的最后&quot;&gt;7. 最后的最后&lt;/h2&gt;

&lt;p&gt;博主其实只了解点机器学习，其他深度学习，神经网络和 AI 的东西很欠缺，所以本文或之后相关的文章出现错误不是巧合，而是很正常的哈，望各位大咖批斗轻点，哈哈。&lt;/p&gt;

&lt;h2 id=&quot;附注&quot;&gt;附注&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=iQdWX1327XQ&quot;&gt;What’s an MNIST&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://yann.lecun.com/exdb/mnist/&quot;&gt;http://yann.lecun.com/exdb/mnist/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tensorflow.org/get_started/mnist/beginners&quot;&gt;MNIST For ML Beginners&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hostmath.com/&quot;&gt;online latex equation editor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/learning/not-another-mnist-tutorial-with-tensorflow&quot;&gt;Not another MNIST tutorial with TensorFlow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://web.stanford.edu/class/cs20si/index.html&quot;&gt;CS 20SI: Tensorflow for Deep Learning Research&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://download.tensorflow.org/paper/whitepaper2015.pdf&quot;&gt;TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[文中的 latex 公式]&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span class=&quot;nt&quot;&gt;\begin{bmatrix}&lt;/span&gt;

x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;11&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;12&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;13&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;1,784&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;21&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;22&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;23&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;2,784&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,1&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,2&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,3&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,784&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;\end{bmatrix}&lt;/span&gt;

*

&lt;span class=&quot;nt&quot;&gt;\begin{bmatrix}&lt;/span&gt;

w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;11&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;12&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;13&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;1,10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;21&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;22&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;23&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;2,10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;784,1&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;784,2&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;784,3&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;784,10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;\end{bmatrix}&lt;/span&gt;

+ 

(n 行)
&lt;span class=&quot;nt&quot;&gt;\begin{bmatrix}&lt;/span&gt;

b&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;1&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; b&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;2&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; . . . &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; b&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;\end{bmatrix}&lt;/span&gt;

= 

&lt;span class=&quot;nt&quot;&gt;\begin{bmatrix}&lt;/span&gt;

y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;11&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;12&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;13&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;1,10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;21&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;22&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;23&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;2,10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;.
&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt;y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,1&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,2&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,3&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; ... &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;_{&lt;/span&gt;n,10&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;\end{bmatrix}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
   </entry>
   

</feed>



  <script type="text/javascript">
    var cnzz_protocol = (("https:" == document.location.protocol) ? " https://" : " http://");
    document.write(unescape("%3Cspan id='cnzz_stat_icon_1258855744'%3E%3C/span%3E%3Cscript src='" + cnzz_protocol + "s11.cnzz.com/z_stat.php%3Fid%3D1258855744' type='text/javascript'%3E%3C/script%3E"));
  </script>

</body>
</html>
